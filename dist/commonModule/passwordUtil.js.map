{"version":3,"sources":["../../commonModule/passwordUtil.js"],"names":["crypto","require","genRandomString","length","randomBytes","Math","ceil","toString","slice","sha512","password","salt","hash","createHmac","update","value","digest","passwordHash","makePassword","plainPassword","checkPassword","realPassword","module","exports"],"mappings":";;AAAA,IAAMA,SAASC,QAAQ,QAAR,CAAf;;AAEA,IAAIC,kBAAkB,SAAlBA,eAAkB,CAASC,MAAT,EAAgB;AAClC,WAAOH,OAAOI,WAAP,CAAmBC,KAAKC,IAAL,CAAUH,SAAO,CAAjB,CAAnB,EACFI,QADE,CACO,KADP,EACc;AADd,KAEFC,KAFE,CAEI,CAFJ,EAEML,MAFN,CAAP,CADkC,CAGV;AAC3B,CAJD;;AAMA,IAAIM,SAAS,SAATA,MAAS,CAASC,QAAT,EAAmBC,IAAnB,EAAwB;AACjC,QAAIC,OAAOZ,OAAOa,UAAP,CAAkB,QAAlB,EAA4BF,IAA5B,CAAX,CADiC,CACa;AAC9CC,SAAKE,MAAL,CAAYJ,QAAZ;AACA,QAAIK,QAAQH,KAAKI,MAAL,CAAY,KAAZ,CAAZ;AACA,WAAO;AACHL,cAAKA,IADF;AAEHM,sBAAaF;AAFV,KAAP;AAIH,CARD;;AAUA,IAAMG,eAAe,SAAfA,YAAe,CAACC,aAAD,EAAmB;AACpC,QAAMR,OAAOT,gBAAgB,EAAhB,CAAb;AACA,WAAOO,OAAOU,aAAP,EAAsBR,IAAtB,CAAP;AACH,CAHD;AAIA,IAAMS,gBAAgB,SAAhBA,aAAgB,CAACD,aAAD,EAAgBR,IAAhB,EAAsBU,YAAtB,EAAuC;AACzD,WAAOZ,OAAOU,aAAP,EAAsBR,IAAtB,EAA4BM,YAA5B,KAA6CI,YAApD;AACH,CAFD;;AAIAC,OAAOC,OAAP,GAAiB;AACbL,kBAAcA,YADD;AAEbE,mBAAeA;AAFF,CAAjB","file":"passwordUtil.js","sourcesContent":["const crypto = require('crypto');\r\n\r\nvar genRandomString = function(length){\r\n    return crypto.randomBytes(Math.ceil(length/2))\r\n        .toString('hex') /** convert to hexadecimal format */\r\n        .slice(0,length);   /** return required number of characters */\r\n};\r\n\r\nvar sha512 = function(password, salt){\r\n    var hash = crypto.createHmac('sha512', salt); /** Hashing algorithm sha512 */\r\n    hash.update(password);\r\n    var value = hash.digest('hex');\r\n    return {\r\n        salt:salt,\r\n        passwordHash:value\r\n    };\r\n};\r\n\r\nconst makePassword = (plainPassword) => {\r\n    const salt = genRandomString(16);\r\n    return sha512(plainPassword, salt);\r\n}\r\nconst checkPassword = (plainPassword, salt, realPassword) => {\r\n    return sha512(plainPassword, salt).passwordHash === realPassword;\r\n}\r\n\r\nmodule.exports = {\r\n    makePassword: makePassword,\r\n    checkPassword: checkPassword\r\n}"]}