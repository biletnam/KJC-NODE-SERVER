{"version":3,"sources":["../../rest_controller/movies.js"],"names":["express","require","router","Router","Joi","multer","pathModule","path","process","cwd","envModule","movieService","storage","diskStorage","destination","req","file","cb","filename","originalname","indexOf","parsingNameArray","split","extension","length","fieldname","Date","now","upload","movies","id","image","genere","minAge","name","information","runningTime","director","mainActor","subActors","get","res","findAllMovie","then","result","send","catch","error","console","log","movie","find","m","params","status","post","single","body","validateMovie","details","message","genres","genre","join","MOVIE_NAME","open","openningDate","RUNTIME","MOVIE_INTRO","MOVIE_IMG","RATE","rate","GENRE","DIST","dist","PEOPLE","people","map","p","JSON","parse","insertMovie","rows","scheme","string","min","required","number","array","items","validate","module","exports"],"mappings":"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","file":"movies.js","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst Joi = require('joi');\r\nconst multer = require('multer'); // express에 multer모듈 적용 (for 파일업로드)\r\nconst pathModule = require('path');\r\nvar path = process.cwd();\r\nvar envModule = require( path + '/envModule' );\r\nconst movieService = require('./oraclDBService/movieService');\r\nconst storage = multer.diskStorage({\r\n\tdestination: function(req, file, cb) {\r\n\t\tcb(null,'uploads/movie')\r\n\t},\r\n\tfilename: function(req,file,cb) {\r\n\t\tif(file.originalname.indexOf('.') !== -1) {\r\n\t\t\tconst parsingNameArray = file.originalname.split('.');\r\n\t\t\tconst extension = parsingNameArray[parsingNameArray.length - 1];\r\n\t\t\tcb(null, 'movie' + file.fieldname + Date.now() + '.' + extension);\r\n\t\t}else {\r\n\t\t\tcb(null, 'movie' + file.fieldname + Date.now());\r\n\t\t}\r\n\t}\r\n})\r\nconst upload = multer({ storage: storage});\r\n\r\nconst movies = [\r\n\t{\r\n\t\tid: 1,\r\n\t\timage: 'http://localhost:5000/static/images/ironman1.jpg',\r\n\t\tgenere: ['공포', '코미디', '로맨스'],\r\n\t\tminAge: '15세',\r\n\t\tname: '아이언맨 1',\r\n\t\tinformation: '토니스타크의 첫 등장. 마블 10년의 첫걸음을 떼다.',\r\n\t\trunningTime: '150',\r\n\t\tdirector: '토니 스타크',\r\n\t\tmainActor: '토니',\r\n\t\tsubActors: ['스타크', '토니스']\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\timage: 'http://localhost:5000/static/images/ironman2.jpg',\r\n\t\tgenere: ['공포', '코미디', '로맨스'],\r\n\t\tminAge: '15세',\r\n\t\tname: '아이언맨 2',\r\n\t\tinformation: '토니스타크의 방심. 이상한 체인 아저씨.',\r\n\t\trunningTime: '150',\r\n\t\tdirector: '토니 스타크',\r\n\t\tmainActor: '토니',\r\n\t\tsubActors: ['스타크', '토니스']\r\n\t},\r\n\t{\r\n\t\tid: 3,\r\n\t\timage: 'http://localhost:5000/static/images/ironman3.jpg',\r\n\t\tgenere: ['공포', '코미디', '로맨스'],\r\n\t\tminAge: '15세',\r\n\t\tname: '아이언맨 3',\r\n\t\tinformation: '토니스타크의 공포. 아이언맨 다중 등장.',\r\n\t\trunningTime: '150',\r\n\t\tdirector: '토니 스타크',\r\n\t\tmainActor: '토니',\r\n\t\tsubActors: ['스타크', '토니스']\r\n\t},\r\n\t\t{\r\n\t\tid: 4,\r\n\t\timage: 'http://localhost:5000/static/images/civilWar.jpg',\r\n\t\tgenere: ['공포', '코미디', '로맨스'],\r\n\t\tminAge: '15세',\r\n\t\tname: '시빌워',\r\n\t\tinformation: '어벤저스 급 출연진 대거 등장',\r\n\t\trunningTime: '150',\r\n\t\tdirector: '토니 스타크',\r\n\t\tmainActor: '토니',\r\n\t\tsubActors: ['스타크', '토니스']\r\n\t},\r\n\t\t{\r\n\t\tid: 5,\r\n\t\timage: 'http://localhost:5000/static/images/deadFull.jpg',\r\n\t\tgenere: ['공포', '코미디', '로맨스'],\r\n\t\tminAge: '15세',\r\n\t\tname: '데드풀',\r\n\t\tinformation: '죽지 않는 남자.',\r\n\t\trunningTime: '150',\r\n\t\tdirector: '토니 스타크',\r\n\t\tmainActor: '토니',\r\n\t\tsubActors: ['스타크', '토니스']\r\n\t},\r\n\t\t{\r\n\t\tid: 6,\r\n\t\timage: 'http://localhost:5000/static/images/welcomeToRural.jpg',\r\n\t\tgenere: ['공포', '코미디', '로맨스'],\r\n\t\tminAge: '15세',\r\n\t\tname: '웰컴투 동막골',\r\n\t\tinformation: '추억의 영화.',\r\n\t\trunningTime: '150',\r\n\t\tdirector: '토니 스타크',\r\n\t\tmainActor: '토니 ㅁㅁㅁ',\r\n\t\tsubActors: ['스타크', '토니스']\r\n\t},\r\n\t\t{\r\n\t\tid: 7,\r\n\t\timage: 'http://localhost:5000/static/images/antMan.jpg',\r\n\t\tgenere: ['공포', '코미디', '로맨스'],\r\n\t\tminAge: '15세',\r\n\t\tname: '앤트맨',\r\n\t\tinformation: '작지만 강한 히어로.',\r\n\t\trunningTime: '150',\r\n\t\tdirector: '토니 스타크',\r\n\t\tmainActor: '토니',\r\n\t\tsubActors: ['스타크', '토니스']\r\n\t}\r\n]\r\n\r\nrouter.get('/', (req, res) => {\r\n\tmovieService.findAllMovie()\r\n\t\t.then((result) => {\r\n\t\t\tres.send(result);\r\n\t\t}).catch((error) => {\r\n\t\tconsole.log(error);\r\n\t})\r\n})\r\nrouter.get('/:id', (req,res) => {\r\n\tconst movie = movies.find(m => m.id === req.params.id);\r\n\tif(!movie) res.status(404).send(`There is No Movie of this ${req.params.id}`);\r\n})\r\nrouter.post('/',upload.single('image'),(req, res) => {\r\n\tconsole.log(req.body);\r\n\tconst {error} = validateMovie(req.body);\r\n\tif(error) {\r\n\t\tres.status(400).send(error.details[0].message);\r\n\t\treturn;\r\n\t}\r\n\tconst genres = req.body.genre.join(', ');\r\n\t const movie = {\r\n\t \tMOVIE_NAME: req.body.name,\r\n\t \topen: req.body.openningDate,\r\n\t \tRUNTIME: req.body.runningTime,\r\n\t \tMOVIE_INTRO: req.body.information,\r\n\t \tMOVIE_IMG: req.file.path,\r\n\t \tRATE: req.body.rate,\r\n\t\t GENRE: genres,\r\n\t\t DIST: req.body.dist,\r\n\t\t PEOPLE: req.body.people ? req.body.people.map((p) => JSON.parse(p)) : null\r\n\t }\r\n     movieService.insertMovie(movie)\r\n\t\t .then((rows) => {\r\n\t \t\tres.send('success');\r\n\t\t }).catch((error) => {\r\n\t \tconsole.log(error);\r\n\t })\r\n})\r\nfunction validateMovie(movie) {\r\n\tconst scheme = {\r\n\t\tname: Joi.string().min(1).required(),\r\n\t\tinformation: Joi.string().min(1).required(),\r\n\t\trunningTime: Joi.number().required(),\r\n\t\tdist: Joi.string().min(1).required(),\r\n\t\trate: Joi.number().required(),\r\n\t\tpeople: Joi.array(),\r\n\t\tgenre: Joi.array().items(Joi.string())\r\n\t}\r\n\t//\t\tminAge: Joi.number().required(),\r\n\treturn Joi.validate(movie,scheme);\r\n}\r\nmodule.exports = router;"]}