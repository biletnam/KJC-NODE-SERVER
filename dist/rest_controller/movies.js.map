{"version":3,"sources":["../../rest_controller/movies.js"],"names":["express","require","router","Router","Joi","multer","pathModule","path","process","cwd","envModule","movieService","commonUtil","storage","diskStorage","destination","req","file","cb","filename","originalname","indexOf","parsingNameArray","split","extension","length","fieldname","Date","now","upload","movieWrapper","rows","PERSON_COLUMN","object","map","m","MOVIE_ID","PER_ID","push","PER_NAME","PER_IMG","CH_NAME","IS_MAIN","exceptObject","Object","keys","key","getExceptKeyObject","get","res","findAllMovie","then","send","catch","error","console","log","findAllPlayingMovie","data","status","post","single","body","validateMovie","details","message","genres","genre","join","videoAddr","movie","MOVIE_NAME","name","open","openningDate","RUNTIME","runningTime","MOVIE_INTRO","information","MOVIE_IMG","RATE","rate","GENRE","DIST","dist","PEOPLE","people","p","JSON","parse","VIDEO_ADDR","insertMovie","put","movieId","params","id","value","moviePlayingChange","scheme","string","min","required","number","array","items","validate","module","exports"],"mappings":"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","file":"movies.js","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst Joi = require('joi');\r\nconst multer = require('multer'); // express에 multer모듈 적용 (for 파일업로드)\r\nconst pathModule = require('path');\r\nvar path = process.cwd();\r\nvar envModule = require( path + '/envModule' );\r\nconst movieService = require('./oraclDBService/movieService');\r\nconst commonUtil = require('../commonModule/commonUtil');\r\nconst storage = multer.diskStorage({\r\n\tdestination: function(req, file, cb) {\r\n\t\tcb(null,'uploads/movie')\r\n\t},\r\n\tfilename: function(req,file,cb) {\r\n\t\tif(file.originalname.indexOf('.') !== -1) {\r\n\t\t\tconst parsingNameArray = file.originalname.split('.');\r\n\t\t\tconst extension = parsingNameArray[parsingNameArray.length - 1];\r\n\t\t\tcb(null, 'movie' + file.fieldname + Date.now() + '.' + extension);\r\n\t\t}else {\r\n\t\t\tcb(null, 'movie' + file.fieldname + Date.now());\r\n\t\t}\r\n\t}\r\n})\r\nconst upload = multer({ storage: storage});\r\nfunction movieWrapper(rows) {\r\n    const PERSON_COLUMN = ['PER_NAME', 'PER_IMG', 'CH_NAME', 'IS_MAIN', 'PER_ID'];\r\n    const object = {};\r\n    rows.map((m) => {\r\n        if(!object[m.MOVIE_ID]) {\r\n            object[m.MOVIE_ID] = m;\r\n        }\r\n        if(!object[m.MOVIE_ID]['PERSON']) {\r\n            object[m.MOVIE_ID]['PERSON'] = [];\r\n        }\r\n        if(m.PER_ID) {\r\n            object[m.MOVIE_ID]['PERSON'].push({\r\n                PER_ID: m.PER_ID,\r\n                PER_NAME: m.PER_NAME,\r\n                PER_IMG: m.PER_IMG,\r\n                CH_NAME: m.CH_NAME,\r\n                IS_MAIN: m.IS_MAIN\r\n            });\r\n        }\r\n    })\r\n    const exceptObject = Object.keys(object).map((key) => {\r\n        return commonUtil.getExceptKeyObject(object[key], PERSON_COLUMN);\r\n    })\r\n    return exceptObject;\r\n}\r\n\r\nrouter.get('/', (req, res) => {\r\n\tmovieService.findAllMovie()\r\n\t\t.then((rows) => {\r\n\t\t\tres.send(movieWrapper(rows));\r\n\t\t}).catch((error) => {\r\n\t\tconsole.log(error);\r\n\t})\r\n})\r\nrouter.get('/playing',(req,res) => {\r\n\tmovieService.findAllPlayingMovie()\r\n\t\t.then((data) => res.send(movieWrapper(data)))\r\n\t\t.catch((error) => res.status(500).send(error));\r\n})\r\nrouter.get('/:id', (req,res) => {\r\n\tres.send('not yet');\r\n})//TODO 이거 해야 함.\r\nrouter.post('/',upload.single('image'),(req, res) => {\r\n\tconsole.log(req.body);\r\n\tconst {error} = validateMovie(req.body);\r\n\tif(error) {\r\n\t\tres.status(400).send(error.details[0].message);\r\n\t\treturn;\r\n\t}\r\n\tconst genres = req.body.genre.join(', ');\r\n\tconst videoAddr = req.body.videoAddr;\r\n\t const movie = {\r\n\t \tMOVIE_NAME: req.body.name,\r\n\t \topen: req.body.openningDate,\r\n\t \tRUNTIME: req.body.runningTime,\r\n\t \tMOVIE_INTRO: req.body.information,\r\n\t \tMOVIE_IMG: req.file.path,\r\n\t \tRATE: req.body.rate,\r\n\t\t GENRE: genres,\r\n\t\t DIST: req.body.dist,\r\n\t\t PEOPLE: req.body.people ? req.body.people.map((p) => JSON.parse(p)) : null,\r\n\t\t VIDEO_ADDR: videoAddr\r\n\t }\r\n     movieService.insertMovie(movie)\r\n\t\t .then((rows) => {\r\n\t \t\tres.send('success');\r\n\t\t }).catch((error) => {\r\n\t \tconsole.log(error);\r\n\t })\r\n})\r\n\r\nrouter.put('/:id/playing/:value', (req, res) => {\r\n\tconst movieId = req.params.id;\r\n\tconst value = req.params.value;\r\n\r\n\tif(!movieId || !value) {\r\n\t\tres.status(405).send('has no parameter');\r\n\t\treturn false;\r\n\t}\r\n\tmovieService.moviePlayingChange(movieId, value)\r\n\t\t.then((data) => res.send(data))\r\n\t\t.catch((error) => res.status(500).send(error));\r\n})\r\nfunction validateMovie(movie) {\r\n\tconst scheme = {\r\n\t\tname: Joi.string().min(1).required(),\r\n\t\tinformation: Joi.string().min(1).required(),\r\n\t\trunningTime: Joi.number().required(),\r\n\t\tdist: Joi.string().min(1).required(),\r\n\t\trate: Joi.number().required(),\r\n\t\tpeople: Joi.array(),\r\n\t\tgenre: Joi.array().items(Joi.string()),\r\n\t\tvideoAddr: Joi.string()\r\n\t}\r\n\t//\t\tminAge: Joi.number().required(),\r\n\treturn Joi.validate(movie,scheme);\r\n}\r\nmodule.exports = router;"]}