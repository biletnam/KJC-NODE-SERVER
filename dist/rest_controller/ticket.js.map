{"version":3,"sources":["../../rest_controller/ticket.js"],"names":["express","require","router","Router","ticketService","bookSeatService","payHistoryService","loginUtil","Joi","post","req","res","validateTicket","body","error","status","send","details","message","selectedSchedule","selectedChair","seatNames","map","c","SEAT_NAME","scheduleId","SCHED_ID","tokenCheckPromise","then","decoded","CUST_ID","_c_id","findBookSeatByScheduleIdAndSeatNames","result","TCK_PRICE","reduce","prev","seat","BOOK_PRICE","b","join","ticketObject","BOOK_SEAT_CNT","length","console","log","createTicket","data","ticket","catch","get","id","params","findTicketById","findMeaningTicketByCustomerId","put","validateTicketingTicket","Promise","resolve","reject","TCK_ID","Number","updateTicketTo","validateRefundTicket","isUser","findPayHistoryByTicketId","payHistory","IS_USER","refund","delete","checkAndResetTicket","scheme","object","required","array","validate","number","module","exports"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,SAASF,QAAQG,MAAR,EAAf;AACA,IAAMC,gBAAgBH,QAAQ,gCAAR,CAAtB;AACA,IAAMI,kBAAkBJ,QAAQ,kCAAR,CAAxB;AACA,IAAMK,oBAAoBL,QAAQ,oCAAR,CAA1B;AACA,IAAMM,YAAYN,QAAQ,2BAAR,CAAlB;AACA,IAAMO,MAAMP,QAAQ,KAAR,CAAZ;;AAGAC,OAAOO,IAAP,CAAY,GAAZ,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAA,0BACXC,eAAeF,IAAIG,IAAnB,CADW;AAAA,QACpBC,KADoB,mBACpBA,KADoB;;AAE3B,QAAGA,KAAH,EAAU;AACNH,YAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,MAAMG,OAAN,CAAc,CAAd,EAAiBC,OAAtC;AACA;AACH;;AAED,QAAMC,mBAAmBT,IAAIG,IAAJ,CAASM,gBAAlC;AACA,QAAMC,gBAAgBV,IAAIG,IAAJ,CAASO,aAA/B;AACA,QAAMC,YAAYD,cAAcE,GAAd,CAAkB,UAACC,CAAD;AAAA,eAAOA,EAAEC,SAAT;AAAA,KAAlB,CAAlB;AACA,QAAMC,aAAaN,iBAAiBO,QAApC;AACAnB,cAAUoB,iBAAV,CAA4BjB,GAA5B,EACKkB,IADL,CACU,UAACC,OAAD,EAAa;AACf,YAAMC,UAAUD,QAAQE,KAAxB;AACA1B,wBAAgB2B,oCAAhB,CAAqDP,UAArD,EAAiEJ,SAAjE,EACKO,IADL,CACU,UAACK,MAAD,EAAY;AACd,gBAAMC,YAAYD,OAAOE,MAAP,CAAc,UAACC,IAAD,EAAOC,IAAP;AAAA,uBAAgBD,OAAOC,KAAKC,UAA5B;AAAA,aAAd,EAAsD,CAAtD,CAAlB;AACA,gBAAMd,YAAYS,OAAOX,GAAP,CAAW,UAACiB,CAAD;AAAA,uBAAOA,EAAEf,SAAT;AAAA,aAAX,EAA+BgB,IAA/B,CAAoC,GAApC,CAAlB;AACA,gBAAMC,eAAgB,EAACX,SAASA,OAAV,EAAmBI,WAAWA,SAA9B;AAClBQ,+BAAeT,OAAOU,MADJ,EACYjB,UAAUD,UADtB,EACkCD,WAAWA,SAD7C,EACwDH,WAAWA,SADnE,EAAtB;AAEIuB,oBAAQC,GAAR,CAAYJ,YAAZ;AACJ,mBAAOrC,cAAc0C,YAAd,CAA2BL,YAA3B,CAAP;AACH,SARL,EASKb,IATL,CASU,UAACmB,IAAD,EAAU;AAACpC,gBAAIK,IAAJ,CAAS,EAACgC,QAAQD,IAAT,EAAT;AAAyB,SAT9C,EAUKE,KAVL,CAUW,UAACnC,KAAD,EAAW;AAACH,gBAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,KAArB;AAA4B,SAVnD;AAWH,KAdL,EAcOmC,KAdP,CAca,UAACnC,KAAD,EAAW;AAACH,YAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gBAArB;AAAuC,KAdhE;AAeH,CA1BD;;AA4BAd,OAAOgD,GAAP,CAAW,MAAX,EAAmB,UAACxC,GAAD,EAAMC,GAAN,EAAc;AAC7B,QAAMwC,KAAKzC,IAAI0C,MAAJ,CAAWD,EAAtB;AACA,QAAG,CAACA,EAAJ,EAAQ;AACJxC,YAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,cAArB;AACA;AACH;AACDZ,kBAAciD,cAAd,CAA6BF,EAA7B,EACKvB,IADL,CACU,UAACmB,IAAD,EAAU;AAACpC,YAAIK,IAAJ,CAAS+B,IAAT;AAAe,KADpC,EAEKE,KAFL,CAEW,UAACnC,KAAD,EAAW;AAACH,YAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,KAArB;AAA4B,KAFnD;AAGH,CATD;;AAWAZ,OAAOgD,GAAP,CAAW,cAAX,EAA2B,UAACxC,GAAD,EAAKC,GAAL,EAAa;AACpCJ,cAAUoB,iBAAV,CAA4BjB,GAA5B,EACKkB,IADL,CACU,UAACC,OAAD,EAAa;AACf,YAAMC,UAAUD,QAAQE,KAAxB;AACAa,gBAAQC,GAAR,CAAYf,OAAZ;AACA1B,sBAAckD,6BAAd,CAA4CxB,OAA5C,EACKF,IADL,CACU,UAACmB,IAAD;AAAA,mBAAUpC,IAAIK,IAAJ,CAAS+B,IAAT,CAAV;AAAA,SADV,EAEKE,KAFL,CAEW,UAACnC,KAAD;AAAA,mBAAWH,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,KAArB,CAAX;AAAA,SAFX;AAGH,KAPL,EAOOmC,KAPP,CAOa,UAACnC,KAAD,EAAW;AAACH,YAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gBAArB;AAAuC,KAPhE;AAQH,CATD;AAUAd,OAAOqD,GAAP,CAAW,YAAX,EAAyB,UAAC7C,GAAD,EAAKC,GAAL,EAAa;AAAA,gCAClB6C,wBAAwB9C,IAAIG,IAA5B,CADkB;AAAA,QAC3BC,KAD2B,yBAC3BA,KAD2B;;AAElC,QAAGA,KAAH,EAAU;AACNH,YAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,MAAMG,OAAN,CAAc,CAAd,EAAiBC,OAAtC;AACA;AACH;AACDX,cAAUoB,iBAAV,CAA4BjB,GAA5B,EACKkB,IADL,CACU,UAACC,OAAD,EAAa;AACf,eAAO,IAAI4B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gBAAM7B,UAAUD,QAAQE,KAAxB;AACAa,oBAAQC,GAAR,CAAYf,OAAZ;AACA1B,0BAAciD,cAAd,CAA6B3C,IAAIG,IAAJ,CAAS+C,MAAtC,EACKhC,IADL,CACU,UAACmB,IAAD,EAAU;AACZ,oBAAMC,SAASD,KAAK,CAAL,CAAf;AACAH,wBAAQC,GAAR,CAAYG,MAAZ;AACA,oBAAIA,OAAOlB,OAAP,KAAmB+B,OAAO/B,OAAP,CAAvB,EAAwC;AACpC6B,2BAAO,mBAAP;AACA;AACH;AACDvD,8BAAc0D,cAAd,CAA6BpD,IAAIG,IAAJ,CAAS+C,MAAtC,EAA8C,GAA9C,EACKhC,IADL,CACU,UAACmB,IAAD;AAAA,2BAAUW,QAAQ,SAAR,CAAV;AAAA,iBADV,EAEKT,KAFL,CAEW,UAACnC,KAAD;AAAA,2BAAW6C,OAAO,OAAP,CAAX;AAAA,iBAFX;AAGH,aAXL;AAYH,SAfM,CAAP;AAgBH,KAlBL,EAkBO/B,IAlBP,CAkBY,UAACmB,IAAD;AAAA,eAAUpC,IAAIK,IAAJ,CAAS+B,IAAT,CAAV;AAAA,KAlBZ,EAkBsCE,KAlBtC,CAkB4C,UAACnC,KAAD;AAAA,eAAWH,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gBAArB,CAAX;AAAA,KAlB5C;AAmBH,CAzBD;AA0BAd,OAAOqD,GAAP,CAAW,SAAX,EAAsB,UAAC7C,GAAD,EAAKC,GAAL,EAAa;AAAA,gCACfoD,qBAAqBrD,IAAIG,IAAzB,CADe;AAAA,QACxBC,KADwB,yBACxBA,KADwB;;AAE/B,QAAGA,KAAH,EAAU;AACNH,YAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,MAAMG,OAAN,CAAc,CAAd,EAAiBC,OAAtC;AACA;AACH;;AAEDX,cAAUoB,iBAAV,CAA4BjB,GAA5B,EACKkB,IADL,CACU,UAACC,OAAD,EAAa;AACf,eAAO,IAAI4B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gBAAM7B,UAAUD,QAAQE,KAAxB;AACA,gBAAMiC,SAASnC,QAAQmC,MAAvB;AACApB,oBAAQC,GAAR,CAAYf,OAAZ;AACA1B,0BAAciD,cAAd,CAA6B3C,IAAIG,IAAJ,CAAS+C,MAAtC,EACKhC,IADL,CACU,UAACmB,IAAD,EAAU;AACZ,oBAAMC,SAASD,KAAK,CAAL,CAAf;AACAH,wBAAQC,GAAR,CAAYG,MAAZ;AACA,oBAAGA,OAAOlB,OAAP,KAAmB+B,OAAO/B,OAAP,CAAtB,EAAuC;AACnC6B,2BAAO,mBAAP;AACA;AACH;AACD,uBAAOrD,kBAAkB2D,wBAAlB,CAA2CjB,OAAOY,MAAlD,CAAP;AACH,aATL,EASOhC,IATP,CASY,UAACmB,IAAD,EAAU;AAClB,oBAAMmB,aAAanB,KAAK,CAAL,CAAnB;AACA,oBAAG,CAACmB,UAAJ,EAAgB;AACZP,2BAAO,sBAAP;AACH;AACD,oBAAGK,MAAH,EAAW;AACPE,+BAAWC,OAAX,GAAqB,GAArB;AACH,iBAFD,MAEO;AACHD,+BAAWC,OAAX,GAAqB,GAArB;AACH;AACD,uBAAO7D,kBAAkB8D,MAAlB,CAAyBF,UAAzB,CAAP;AACH,aApBD,EAoBGtC,IApBH,CAoBQ,UAACmB,IAAD,EAAU;AACdW,wBAAQX,IAAR;AACH,aAtBD,EAsBGE,KAtBH,CAsBS,UAACnC,KAAD,EAAW;AAChB6C,uBAAO7C,KAAP;AACH,aAxBD;AAyBH,SA7BM,CAAP;AA8BH,KAhCL,EAiCKc,IAjCL,CAiCU,UAACmB,IAAD;AAAA,eAAUpC,IAAIK,IAAJ,CAAS+B,IAAT,CAAV;AAAA,KAjCV,EAkCKE,KAlCL,CAkCW,UAACnC,KAAD,EAAW;AAACH,YAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,KAArB;AAA4B,KAlCnD;AAmCH,CA1CD;AA2CAZ,OAAOmE,MAAP,CAAc,MAAd,EAAsB,UAAC3D,GAAD,EAAKC,GAAL,EAAa;AAC/B,QAAMwC,KAAKzC,IAAI0C,MAAJ,CAAWD,EAAtB;AACA,QAAG,CAACA,EAAJ,EAAQ;AACJxC,YAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,cAArB;AACA;AACH;AACDZ,kBAAckE,mBAAd,CAAkCnB,EAAlC,EACKvB,IADL,CACU,UAACmB,IAAD;AAAA,eAAUpC,IAAIK,IAAJ,CAAS+B,IAAT,CAAV;AAAA,KADV,EAEKE,KAFL,CAEW,UAACnC,KAAD;AAAA,eAAWH,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,KAArB,CAAX;AAAA,KAFX;AAGH,CATD;;AAYA,SAASF,cAAT,CAAwB6B,YAAxB,EAAsC;AAClC,QAAM8B,SAAS;AACXpD,0BAAkBX,IAAIgE,MAAJ,GAAaC,QAAb,EADP;AAEXrD,uBAAeZ,IAAIkE,KAAJ,GAAYD,QAAZ;AAEnB;AAJe,KAAf,CAKA,OAAOjE,IAAImE,QAAJ,CAAalC,YAAb,EAA0B8B,MAA1B,CAAP;AACH;AACD,SAASR,oBAAT,CAA8BtB,YAA9B,EAA4C;AACxC,QAAM8B,SAAS;AACXX,gBAAQpD,IAAIoE,MAAJ;AADG,KAAf;AAGA,WAAOpE,IAAImE,QAAJ,CAAalC,YAAb,EAA2B8B,MAA3B,CAAP;AACH;AACD,SAASf,uBAAT,CAAiCf,YAAjC,EAA+C;AAC3C,QAAM8B,SAAS;AACXX,gBAAQpD,IAAIoE,MAAJ;AADG,KAAf;AAGA,WAAOpE,IAAImE,QAAJ,CAAalC,YAAb,EAA2B8B,MAA3B,CAAP;AACH;AACDM,OAAOC,OAAP,GAAiB5E,MAAjB","file":"ticket.js","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst ticketService = require('./oraclDBService/ticketService');\r\nconst bookSeatService = require('./oraclDBService/bookSeatService');\r\nconst payHistoryService = require('./oraclDBService/payHistoryService');\r\nconst loginUtil = require('../commonModule/loginUtil');\r\nconst Joi = require('joi');\r\n\r\n\r\nrouter.post('/', (req, res) => {\r\n    const {error} = validateTicket(req.body);\r\n    if(error) {\r\n        res.status(400).send(error.details[0].message);\r\n        return;\r\n    }\r\n\r\n    const selectedSchedule = req.body.selectedSchedule;\r\n    const selectedChair = req.body.selectedChair;\r\n    const seatNames = selectedChair.map((c) => c.SEAT_NAME);\r\n    const scheduleId = selectedSchedule.SCHED_ID;\r\n    loginUtil.tokenCheckPromise(req)\r\n        .then((decoded) => {\r\n            const CUST_ID = decoded._c_id;\r\n            bookSeatService.findBookSeatByScheduleIdAndSeatNames(scheduleId, seatNames)\r\n                .then((result) => {\r\n                    const TCK_PRICE = result.reduce((prev, seat) => prev + seat.BOOK_PRICE, 0);\r\n                    const SEAT_NAME = result.map((b) => b.SEAT_NAME).join(',');\r\n                    const ticketObject =  {CUST_ID: CUST_ID, TCK_PRICE: TCK_PRICE,\r\n                        BOOK_SEAT_CNT: result.length, SCHED_ID: scheduleId, SEAT_NAME: SEAT_NAME, seatNames: seatNames};\r\n                        console.log(ticketObject);\r\n                    return ticketService.createTicket(ticketObject);\r\n                })\r\n                .then((data) => {res.send({ticket: data})})\r\n                .catch((error) => {res.status(500).send(error)});\r\n        }).catch((error) => {res.status(403).send('login required')});\r\n})\r\n\r\nrouter.get('/:id', (req, res) => {\r\n    const id = req.params.id;\r\n    if(!id) {\r\n        res.status(405).send('no parameter');\r\n        return;\r\n    }\r\n    ticketService.findTicketById(id)\r\n        .then((data) => {res.send(data)})\r\n        .catch((error) => {res.status(500).send(error)});\r\n})\r\n\r\nrouter.get('/of/customer', (req,res) => {\r\n    loginUtil.tokenCheckPromise(req)\r\n        .then((decoded) => {\r\n            const CUST_ID = decoded._c_id;\r\n            console.log(CUST_ID);\r\n            ticketService.findMeaningTicketByCustomerId(CUST_ID)\r\n                .then((data) => res.send(data))\r\n                .catch((error) => res.status(500).send(error));\r\n        }).catch((error) => {res.status(403).send('login required')});\r\n})\r\nrouter.put('/ticketing', (req,res) => {\r\n    const {error} = validateTicketingTicket(req.body);\r\n    if(error) {\r\n        res.status(400).send(error.details[0].message);\r\n        return;\r\n    }\r\n    loginUtil.tokenCheckPromise(req)\r\n        .then((decoded) => {\r\n            return new Promise((resolve, reject) => {\r\n                const CUST_ID = decoded._c_id;\r\n                console.log(CUST_ID);\r\n                ticketService.findTicketById(req.body.TCK_ID)\r\n                    .then((data) => {\r\n                        const ticket = data[0];\r\n                        console.log(ticket);\r\n                        if (ticket.CUST_ID !== Number(CUST_ID)) {\r\n                            reject('no Customer Error');\r\n                            return;\r\n                        }\r\n                        ticketService.updateTicketTo(req.body.TCK_ID, 'T')\r\n                            .then((data) => resolve('success'))\r\n                            .catch((error) => reject('error'));\r\n                    })\r\n            });\r\n        }).then((data) => res.send(data)).catch((error) => res.status(405).send('login required'))\r\n})\r\nrouter.put('/refund', (req,res) => {\r\n    const {error} = validateRefundTicket(req.body);\r\n    if(error) {\r\n        res.status(400).send(error.details[0].message);\r\n        return;\r\n    }\r\n\r\n    loginUtil.tokenCheckPromise(req)\r\n        .then((decoded) => {\r\n            return new Promise((resolve, reject) => {\r\n                const CUST_ID = decoded._c_id;\r\n                const isUser = decoded.isUser;\r\n                console.log(CUST_ID);\r\n                ticketService.findTicketById(req.body.TCK_ID)\r\n                    .then((data) => {\r\n                        const ticket = data[0];\r\n                        console.log(ticket);\r\n                        if(ticket.CUST_ID !== Number(CUST_ID)) {\r\n                            reject('no Customer Error');\r\n                            return;\r\n                        }\r\n                        return payHistoryService.findPayHistoryByTicketId(ticket.TCK_ID);\r\n                    }).then((data) => {\r\n                    const payHistory = data[0];\r\n                    if(!payHistory) {\r\n                        reject('no pay History Error');\r\n                    }\r\n                    if(isUser) {\r\n                        payHistory.IS_USER = 'Y';\r\n                    } else {\r\n                        payHistory.IS_USER = 'N';\r\n                    }\r\n                    return payHistoryService.refund(payHistory);\r\n                }).then((data) => {\r\n                    resolve(data);\r\n                }).catch((error) => {\r\n                    reject(error);\r\n                })\r\n            })\r\n        })\r\n        .then((data) => res.send(data))\r\n        .catch((error) => {res.status(403).send(error)});\r\n})\r\nrouter.delete('/:id', (req,res) => {\r\n    const id = req.params.id;\r\n    if(!id) {\r\n        res.status(405).send('no parameter');\r\n        return;\r\n    }\r\n    ticketService.checkAndResetTicket(id)\r\n        .then((data) => res.send(data))\r\n        .catch((error) => res.status(500).send(error));\r\n})\r\n\r\n\r\nfunction validateTicket(ticketObject) {\r\n    const scheme = {\r\n        selectedSchedule: Joi.object().required(),\r\n        selectedChair: Joi.array().required()\r\n    }\r\n    //\t\tminAge: Joi.number().required(),\r\n    return Joi.validate(ticketObject,scheme);\r\n}\r\nfunction validateRefundTicket(ticketObject) {\r\n    const scheme = {\r\n        TCK_ID: Joi.number()\r\n    }\r\n    return Joi.validate(ticketObject, scheme);\r\n}\r\nfunction validateTicketingTicket(ticketObject) {\r\n    const scheme = {\r\n        TCK_ID: Joi.number()\r\n    }\r\n    return Joi.validate(ticketObject, scheme);\r\n}\r\nmodule.exports = router;"]}