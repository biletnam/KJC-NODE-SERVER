{"version":3,"sources":["../../rest_controller/payHistory.js"],"names":["express","require","router","Router","Joi","ticketService","customerService","discountService","commonUtil","loginUtil","payHistoryService","post","req","res","validatePayHistory","body","error","status","send","details","message","tokenCheckPromise","then","decoded","CUST_ID","_c_id","isUser","userPay","nonUserPay","catch","get","findPayHistoryByCustomerId","data","findUserByCustomerId","point","PIONT","Number","POINT_PAY","findTicketById","TCK_ID","Promise","resolve","reject","payTicket","console","log","pointSave","Math","floor","TCK_PRICE","payPrice","payHistoryObject","PAY_DET_CODE","PAY_CL_CODE","DISC_PRICE","PAY_PRICE","POINT_SAVE","DISC_CODE","findByCode","discData","disc","calculateDiscountPrice","DISC_METHOD","DISC_AMT","createPayHistory","result","findNonUserCustomerByCustomerId","createPayHistoryOfNonUser","playHistoryObject","scheme","number","required","validate","module","exports"],"mappings":"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","file":"payHistory.js","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst Joi = require('joi');\r\nconst ticketService = require('./oraclDBService/ticketService');\r\nconst customerService = require('./oraclDBService/customerService');\r\nconst discountService = require('./oraclDBService/discountService');\r\nconst commonUtil = require('../commonModule/commonUtil');\r\nconst loginUtil = require('../commonModule/loginUtil');\r\nconst payHistoryService = require('./oraclDBService/payHistoryService');\r\n\r\nrouter.post('/', (req, res) => {\r\n    const {error} = validatePayHistory(req.body);\r\n    if(error) {\r\n        res.status(400).send(error.details[0].message);\r\n        return;\r\n    }\r\n    loginUtil.tokenCheckPromise(req)\r\n        .then((decoded) => {\r\n            const CUST_ID = decoded._c_id;\r\n            if(decoded.isUser) {\r\n                userPay(req,res,CUST_ID);\r\n            } else {\r\n                nonUserPay(req,res,CUST_ID);\r\n            }\r\n        }).catch((error) => {res.status(403).send('login required')});\r\n})\r\nrouter.get('/of', (req,res) => {\r\n    loginUtil.tokenCheckPromise(req)\r\n        .then((decoded) => {\r\n            const CUST_ID = decoded._c_id;\r\n            payHistoryService.findPayHistoryByCustomerId(CUST_ID)\r\n                .then((data) => res.send(data))\r\n                .catch((error) => res.status(500).send(error));\r\n        }).catch((error) => {res.status(403).send('login required')});\r\n})\r\nfunction userPay(req, res, CUST_ID) {\r\n    return customerService.findUserByCustomerId(CUST_ID)\r\n        .then((data) => {\r\n            const point = data[0].PIONT;\r\n            if(point < Number(req.body.POINT_PAY)) {\r\n                throw 'point is lower';\r\n            }\r\n            return ticketService.findTicketById(req.body.TCK_ID);\r\n        }).then((data) => {\r\n            return new Promise((resolve,reject) => {\r\n                const payTicket = data[0];\r\n                console.log(payTicket);\r\n                if(!payTicket) {\r\n                    reject('no ticket');\r\n                    return;\r\n                }\r\n                const pointSave = Math.floor(payTicket.TCK_PRICE / 10);\r\n                const payPrice = payTicket.TCK_PRICE - Number(req.body.POINT_PAY);\r\n                const payHistoryObject = {\r\n                    CUST_ID: CUST_ID, PAY_DET_CODE: Number(req.body.PAY_DET_CODE),\r\n                    PAY_CL_CODE: Number(req.body.PAY_CL_CODE), POINT_PAY: req.body.POINT_PAY, DISC_PRICE: 0,\r\n                    PAY_PRICE: payPrice, POINT_SAVE: pointSave, TCK_ID: payTicket.TCK_ID,\r\n                    DISC_CODE: null\r\n                }\r\n\r\n                if(req.body.DISC_CODE) {\r\n                    discountService.findByCode(req.body.DISC_CODE)\r\n                        .then((discData) => {\r\n                            const disc = discData[0];\r\n                            if(!disc) {\r\n                                reject('no Discount');\r\n                                return;\r\n                            }\r\n                            payHistoryObject.DISC_PRICE = discountService.calculateDiscountPrice(payTicket.TCK_PRICE, disc.DISC_METHOD, disc.DISC_AMT);\r\n                            payHistoryObject.PAY_PRICE = payTicket.TCK_PRICE - Number(payHistoryObject.DISC_PRICE) - Number(payHistoryObject.POINT_PAY);\r\n                            payHistoryObject.DISC_CODE = disc.DISC_CODE;\r\n                            resolve(payHistoryObject);\r\n                        })\r\n                        .catch((error) => {reject(error)});\r\n                } else {\r\n                    resolve(payHistoryObject);\r\n                }\r\n            })\r\n        }).then((payHistoryObject) => {\r\n            console.log(payHistoryObject);\r\n            return payHistoryService.createPayHistory(payHistoryObject);\r\n        }).then((result) => res.send(result))\r\n        .catch((error) => res.status(500).send(error));\r\n}\r\nfunction nonUserPay(req, res, CUST_ID) {\r\n    return customerService.findNonUserCustomerByCustomerId(CUST_ID)\r\n        .then((result) => {\r\n            return ticketService.findTicketById(req.body.TCK_ID);\r\n        }).then((data) => {\r\n            return new Promise((resolve,reject) => {\r\n                const payTicket = data[0];\r\n                if(!payTicket) {\r\n                    reject('no ticket');\r\n                    return;\r\n                }\r\n                const payPrice = payTicket.TCK_PRICE - Number(req.body.POINT_PAY);\r\n                const payHistoryObject = {\r\n                    CUST_ID: CUST_ID, PAY_DET_CODE: Number(req.body.PAY_DET_CODE),\r\n                    PAY_CL_CODE: Number(req.body.PAY_CL_CODE), POINT_PAY: 0, DISC_PRICE: 0,\r\n                    PAY_PRICE: payPrice, POINT_SAVE: 0, TCK_ID: payTicket.TCK_ID,\r\n                    DISC_CODE: null\r\n                }\r\n\r\n                if(req.body.DISC_CODE) {\r\n                    discountService.findByCode(req.body.DISC_CODE)\r\n                        .then((discData) => {\r\n                            const disc = discData[0];\r\n                            if(!disc) {\r\n                                reject('no Discount');\r\n                                return;\r\n                            }\r\n                            payHistoryObject.DISC_PRICE = discountService.calculateDiscountPrice(payTicket.TCK_PRICE, disc.DISC_METHOD, disc.DISC_AMT);\r\n                            payHistoryObject.PAY_PRICE = payTicket.TCK_PRICE - Number(payHistoryObject.DISC_PRICE) - Number(payHistoryObject.POINT_PAY);\r\n                            payHistoryObject.DISC_CODE = disc.DISC_CODE;\r\n                            resolve(payHistoryObject);\r\n                        })\r\n                        .catch((error) => {reject(error)});\r\n                } else {\r\n                    resolve(payHistoryObject);\r\n                }\r\n            })\r\n        }).then((payHistoryObject) => {\r\n            console.log(payHistoryObject);\r\n            return payHistoryService.createPayHistoryOfNonUser(payHistoryObject);\r\n        }).then((result) => res.send(result))\r\n        .catch((error) => res.status(500).send(error));\r\n}\r\n\r\n\r\nfunction validatePayHistory(playHistoryObject) {\r\n    const scheme = {\r\n        TCK_ID: Joi.number().required(),\r\n        PAY_DET_CODE: Joi.number().required(),\r\n        PAY_CL_CODE: Joi.number().required(),\r\n        DISC_CODE: Joi.number(),\r\n        POINT_PAY: Joi.number()\r\n    }\r\n    //\t\tminAge: Joi.number().required(),\r\n    return Joi.validate(playHistoryObject,scheme);\r\n}\r\n\r\nmodule.exports = router;"]}