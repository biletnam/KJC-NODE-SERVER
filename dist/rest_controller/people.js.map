{"version":3,"sources":["../../rest_controller/people.js"],"names":["express","require","router","Router","Joi","multer","path","process","cwd","envModule","peopleService","storage","diskStorage","destination","req","file","cb","filename","originalname","indexOf","parsingNameArray","split","extension","length","fieldname","Date","now","upload","get","res","result","findPeople","then","data","send","post","single","console","log","validatePerson","body","error","status","details","message","person","name","picture","role","information","personObject","PER_NAME","PER_IMG","ROLE","insertPerson","catch","scheme","string","min","required","validate","module","exports"],"mappings":"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","file":"people.js","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst Joi = require('joi');\r\nconst multer = require('multer'); // express에 multer모듈 적용 (for 파일업로드)\r\nvar path = process.cwd();\r\nvar envModule = require( path + '/envModule' );\r\nconst peopleService = require('./oraclDBService/peopleService');\r\n\r\nconst storage = multer.diskStorage({\r\n\tdestination: function(req, file, cb) {\r\n\t\tcb(null,'uploads/people')\r\n\t},\r\n\tfilename: function(req,file,cb) {\r\n\t\tif(file.originalname.indexOf('.') !== -1) {\r\n\t\t\tconst parsingNameArray = file.originalname.split('.');\r\n\t\t\tconst extension = parsingNameArray[parsingNameArray.length - 1];\r\n\t\t\tcb(null, 'people' + file.fieldname + Date.now() + '.' + extension);\r\n\t\t}else {\r\n\t\t\tcb(null, 'people' + file.fieldname + Date.now());\r\n\t\t}\r\n\t}\r\n})\r\nconst upload = multer({ storage: storage});\r\n\r\nrouter.get('/', (req, res) => {\r\n    const result = peopleService.findPeople();\r\n    result.then((data) => {\r\n        res.send(data);\r\n\t})\r\n})\r\nrouter.post('/',upload.single('imageFile'), (req,res) => {\r\n\tconsole.log(req.file.path);\r\n\tconst {error} = validatePerson(req.body);\r\n\tconsole.log(req.body);\r\n\tif(error) {\r\n\t\tres.status(400).send(error.details[0].message);\r\n\t\treturn;\r\n\t}\r\n\tconst person = {name: req.body.name, picture: '', role: req.body.role};\r\n\tif(req.file && req.file.path) {\r\n\t\tperson.picture = req.file.path;\r\n\t}\r\n\tif(req.body.information) {\r\n\t\tperson.information = req.body.information;\r\n\t}\r\n\tconst personObject = {\r\n\t\tPER_NAME: person.name,\r\n\t\tPER_IMG: person.picture,\r\n\t\tROLE: person.role\r\n\t}\r\n\tpeopleService.insertPerson(personObject)\r\n\t\t.then((data) => {\r\n\t\t\tres.send(data);\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\tconsole.log(error);\r\n\t\tres.status(400).send('has error');\r\n\t});\r\n})\r\nfunction validatePerson(person) {\r\n\tconst scheme = {\r\n\t\tname: Joi.string().min(1).required(),\r\n\t\trole: Joi.string().min(1).required()\r\n\t}\r\n\t//\t\tminAge: Joi.number().required(),\r\n\treturn Joi.validate(person,scheme);\r\n}\r\nmodule.exports = router;"]}