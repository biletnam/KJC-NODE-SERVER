{"version":3,"sources":["../../rest_controller/branch.js"],"names":["express","require","router","Router","branchService","Joi","loginUtil","get","req","res","console","log","findAllBranch","then","data","send","catch","error","post","validateBranch","body","status","details","message","tokenCheckPromise","decoded","isDirector","branchObject","BRANCH_NAME","name","ZIP_CODE","zipCode","ADDR","address","ADDR_DET","address_detail","insertBranch","result","branch","scheme","string","min","required","validate","module","exports"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,SAASF,QAAQG,MAAR,EAAf;AACA,IAAMC,gBAAgBH,QAAQ,gCAAR,CAAtB;AACA,IAAMI,MAAMJ,QAAQ,KAAR,CAAZ;AACA,IAAMK,YAAYL,QAAQ,2BAAR,CAAlB;AACAC,OAAOK,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1BC,YAAQC,GAAR,CAAY,aAAZ;AACAP,kBAAcQ,aAAd,GAA8BC,IAA9B,CAAmC,UAACC,IAAD,EAAU;AACzCL,YAAIM,IAAJ,CAASD,IAAT;AACH,KAFD,EAEGE,KAFH,CAES,UAACC,KAAD;AAAA,eAAWP,QAAQC,GAAR,CAAY,OAAZ,CAAX;AAAA,KAFT;AAGH,CALD;AAMAT,OAAOgB,IAAP,CAAY,GAAZ,EAAiB,UAACV,GAAD,EAAMC,GAAN,EAAc;AAAA,0BACXU,eAAeX,IAAIY,IAAnB,CADW;AAAA,QACpBH,KADoB,mBACpBA,KADoB;;AAE3B,QAAGA,KAAH,EAAU;AACNR,YAAIY,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqBE,MAAMK,OAAN,CAAc,CAAd,EAAiBC,OAAtC;AACA;AACH;AACDjB,cAAUkB,iBAAV,CAA4BhB,GAA5B,EACKK,IADL,CACU,UAACY,OAAD,EAAa;AACf,YAAMC,aAAaD,QAAQC,UAA3B;AACA,YAAG,CAACA,UAAJ,EAAgB;AACZjB,gBAAIY,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB,aAArB;AACA;AACH;AACD,YAAMY,eAAe;AACjBC,yBAAapB,IAAIY,IAAJ,CAASS,IADL;AAEjBC,sBAAUtB,IAAIY,IAAJ,CAASW,OAFF;AAGjBC,kBAAMxB,IAAIY,IAAJ,CAASa,OAHE;AAIjBC,sBAAU1B,IAAIY,IAAJ,CAASe;AAJF,SAArB;AAMA/B,sBAAcgC,YAAd,CAA2BT,YAA3B,EACKd,IADL,CACU,UAACwB,MAAD,EAAY;AAAC3B,oBAAQC,GAAR,CAAY,SAAZ,EAAwBF,IAAIM,IAAJ,CAASsB,MAAT;AAAkB,SADjE,EAEKrB,KAFL,CAEW,UAACC,KAAD,EAAW;AAACR,gBAAIY,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB,qBAArB;AAA4C,SAFnE;AAGH,KAhBL,EAgBOC,KAhBP,CAgBa,UAACC,KAAD;AAAA,eAAWR,IAAIY,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqBE,KAArB,CAAX;AAAA,KAhBb;AAiBH,CAvBD;;AAyBA,SAASE,cAAT,CAAwBmB,MAAxB,EAAgC;AAC5B,QAAMC,SAAS;AACXV,cAAMxB,IAAImC,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,QAApB,EADK;AAEXX,iBAAS1B,IAAImC,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,QAApB,EAFE;AAGXT,iBAAS5B,IAAImC,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,QAApB,EAHE;AAIXP,wBAAe9B,IAAImC,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,QAApB;AAEnB;AANe,KAAf,CAOA,OAAOrC,IAAIsC,QAAJ,CAAaL,MAAb,EAAoBC,MAApB,CAAP;AACH;;AAEDK,OAAOC,OAAP,GAAiB3C,MAAjB","file":"branch.js","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst branchService = require('./oraclDBService/branchService');\r\nconst Joi = require('joi');\r\nconst loginUtil = require('../commonModule/loginUtil');\r\nrouter.get('/', (req, res) => {\r\n    console.log('get Request');\r\n    branchService.findAllBranch().then((data) => {\r\n        res.send(data);\r\n    }).catch((error) => console.log('error'));\r\n})\r\nrouter.post('/', (req, res) => {\r\n    const {error} = validateBranch(req.body);\r\n    if(error) {\r\n        res.status(400).send(error.details[0].message);\r\n        return;\r\n    }\r\n    loginUtil.tokenCheckPromise(req)\r\n        .then((decoded) => {\r\n            const isDirector = decoded.isDirector;\r\n            if(!isDirector) {\r\n                res.status(403).send('no director');\r\n                return;\r\n            }\r\n            const branchObject = {\r\n                BRANCH_NAME: req.body.name,\r\n                ZIP_CODE: req.body.zipCode,\r\n                ADDR: req.body.address,\r\n                ADDR_DET: req.body.address_detail\r\n            }\r\n            branchService.insertBranch(branchObject)\r\n                .then((result) => {console.log('success'); res.send(result);})\r\n                .catch((error) => {res.status(400).send('error while insert1')});\r\n        }).catch((error) => res.status(403).send(error))\r\n})\r\n\r\nfunction validateBranch(branch) {\r\n    const scheme = {\r\n        name: Joi.string().min(3).required(),\r\n        zipCode: Joi.string().min(1).required(),\r\n        address: Joi.string().min(1).required(),\r\n        address_detail:Joi.string().min(1).required(),\r\n    }\r\n    //\t\tminAge: Joi.number().required(),\r\n    return Joi.validate(branch,scheme);\r\n}\r\n\r\nmodule.exports = router;"]}