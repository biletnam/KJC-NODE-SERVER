{"version":3,"sources":["../../rest_controller/schedule.js"],"names":["express","require","router","Router","Joi","scheduleService","commonUtil","loginUtil","post","req","res","console","log","body","validateSchedule","error","status","send","details","message","tokenCheckPromise","then","decoded","isDirector","date","replace","startTime","endTime","startTimeDate","endTimeDate","scheduleObject","MOVIE_ID","movieId","SCHED_DATE","SCHED_NO","sequence","PL_START_TIME","CINEMA_NO","cinemaNO","BRCH_ID","branchId","PL_END_TIME","PT_ID","playTypeId","findMovieScheduleBetweenStartEnd","row","length","JSON","stringify","insertSchedule","success","catch","get","findAll","data","params","isNaN","findScheduleByDate","err","date1","date2","findMovieScheduleBetween","due","today","Date","fromDateString","toOracleISOTimeString","dueDate","setDate","getDate","Number","setHours","dueDateString","findPublicMovieScheduleBetween","delete","id","deleteScheduleById","put","sid","toPublic","scheduleId","calculateSellRateAndRegister","schedule","scheme","string","min","required","number","validate","module","exports"],"mappings":"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","file":"schedule.js","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst Joi = require('joi');\r\nconst scheduleService = require('./oraclDBService/scheduleService');\r\nconst commonUtil = require('../commonModule/commonUtil');\r\nconst loginUtil = require('../commonModule/loginUtil');\r\nrouter.post('/', (req,res) => {\r\n    console.log(req.body);\r\n    const {error} = validateSchedule(req.body);\r\n    if(error) {\r\n        res.status(400).send(error.details[0].message);\r\n        return;\r\n    }\r\n    loginUtil.tokenCheckPromise(req)\r\n        .then((decoded) => {\r\n            const isDirector = decoded.isDirector;\r\n            if(!isDirector) {\r\n                res.status(403).send('login Required');\r\n                return;\r\n            }\r\n            const date = req.body.date.replace(/-/g, '');\r\n            const startTime = req.body.startTime.replace(/:/g, '');\r\n            const endTime = req.body.endTime.replace(/:/g, '');\r\n            const startTimeDate = date+startTime;\r\n            const endTimeDate = date+endTime;\r\n            const scheduleObject =\r\n                {MOVIE_ID: req.body.movieId, SCHED_DATE: date,\r\n                    SCHED_NO: req.body.sequence, PL_START_TIME: startTimeDate,\r\n                    CINEMA_NO: req.body.cinemaNO, BRCH_ID: req.body.branchId,\r\n                    PL_END_TIME: endTimeDate, PT_ID:  req.body.playTypeId};\r\n\r\n            scheduleService.findMovieScheduleBetweenStartEnd(scheduleObject.PL_START_TIME, scheduleObject.PL_END_TIME, scheduleObject.BRCH_ID, scheduleObject.CINEMA_NO)\r\n                .then((row) => {\r\n                    console.log(row);\r\n                    if(row.length > 0) {\r\n                        throw JSON.stringify(row[0]) + 'already Exist';\r\n                    } else {\r\n                        console.log('whiy here');\r\n                        return scheduleService.insertSchedule(scheduleObject);\r\n                    }\r\n                }).then((success) => {res.send('success')})\r\n                .catch((error) => res.status(500).send(error));\r\n        }).catch((error) => res.status(403).send(error));\r\n})\r\n\r\nrouter.get('/', (req,res) => {\r\n    scheduleService.findAll()\r\n        .then((data) => res.send(data))\r\n        .catch((error) => res.status(500).send('nothing'));\r\n})\r\n\r\nrouter.get('/date/:date', (req, res) => {\r\n    const date = req.params.date;\r\n    if(isNaN(date)) {\r\n        res.status(405).send('not support date Type, ex)20120930');\r\n        return false;\r\n    }\r\n    scheduleService.findScheduleByDate(date)\r\n        .then((data) => res.send(data))\r\n        .catch((err) => res.status(500).send(err));\r\n})\r\nrouter.get('/movie/:movieId/date/:date/:date2', (req,res) => {\r\n    const date1 = req.params.date;\r\n    const date2 = req.params.date2;\r\n    const movieId = req.params.movieId;\r\n    if(isNaN(date1) || isNaN(date2) || isNaN(movieId)) {\r\n        res.status(405).send('not support date Type, ex)20120930');\r\n        return false;\r\n    }\r\n    scheduleService.findMovieScheduleBetween(movieId, date1, date2)\r\n        .then((data) => res.send(data))\r\n        .catch((error) => res.status(500).send(error));\r\n})\r\nrouter.get('/movie/:movieId/due/:due', (req, res) => {\r\n    const due = req.params.due;\r\n    const movieId = req.params.movieId;\r\n    if(isNaN(due) || isNaN(movieId)) {\r\n        res.status(405).send('not support date Type, ex)20120930');\r\n        return false;\r\n    }\r\n    const today = new Date();\r\n    const fromDateString = commonUtil.toOracleISOTimeString(today);\r\n    const dueDate = new Date();\r\n    dueDate.setDate(dueDate.getDate() + Number(due));\r\n    dueDate.setHours(0,0,0,0);\r\n    const dueDateString = commonUtil.toOracleISOTimeString(dueDate);\r\n    scheduleService.findPublicMovieScheduleBetween(movieId, fromDateString, dueDateString)\r\n        .then((data) => res.send(data))\r\n        .catch((error) => res.status(500).send(error));\r\n})\r\nrouter.delete('/:id', (req,res) => {\r\n    const id = req.params.id;\r\n    if(!id) {\r\n        res.status(405).send('no id');\r\n    }\r\n    loginUtil.tokenCheckPromise(req)\r\n        .then((decoded) => {\r\n            const isDirector = decoded.isDirector;\r\n            if(!isDirector) {\r\n                res.status(403).send('login Required');\r\n                return;\r\n            }\r\n            scheduleService.deleteScheduleById(id)\r\n                .then((data) => res.send(data))\r\n                .catch((error) => res.status(500).send(error));\r\n        }).catch((error) => res.status(403).send(error));\r\n\r\n})\r\nrouter.put('/public/:sid', (req, res) => {\r\n    const sid = req.params.sid;\r\n    if(!sid) {\r\n        res.status(405).send('no sid');\r\n    }\r\n    console.log('here and public');\r\n    loginUtil.tokenCheckPromise(req)\r\n        .then((decoded) => {\r\n            const isDirector = decoded.isDirector;\r\n            console.log('here');\r\n            if(!isDirector) {\r\n                res.status(403).send('login required');\r\n                return;\r\n            }\r\n            scheduleService.toPublic(sid)\r\n                .then((data) => res.send('success'))\r\n                .catch((error) => res.status(500).send('fail'));\r\n        }).catch((error) => res.status(403).send(error));\r\n})\r\nrouter.put('/sellRate/:scheduleId', (req, res) => {\r\n    const scheduleId = req.params.scheduleId;\r\n    if(!scheduleId){\r\n        res.status(405).send('no shedule id');\r\n        return false;\r\n    }\r\n    loginUtil.tokenCheckPromise(req)\r\n        .then((decoded) => {\r\n            const isDirector = decoded.isDirector;\r\n            if(!isDirector) {\r\n                res.status(403).send('login Required');\r\n                return;\r\n            }\r\n            scheduleService.calculateSellRateAndRegister(scheduleId)\r\n                .then((data) => res.send(data))\r\n                .catch((error) => res.status(500).send(error));\r\n        }).catch((error) => res.status(403).send(error));\r\n\r\n})\r\nfunction validateSchedule(schedule) {\r\n    const scheme = {\r\n        date: Joi.string().min(1).required(),\r\n        movieId: Joi.number().min(1).required(),\r\n        startTime: Joi.string().min(1).required(),\r\n        endTime: Joi.string().min(1).required(),\r\n        cinemaNO: Joi.number().required(),\r\n        branchId: Joi.number().required(),\r\n        sequence: Joi.number().required(),\r\n        playTypeId: Joi.number().required()\r\n    }\r\n    //\t\tminAge: Joi.number().required(),\r\n    return Joi.validate(schedule,scheme);\r\n}\r\n\r\nmodule.exports = router;"]}