{"version":3,"sources":["../../rest_controller/schedule.js"],"names":["express","require","router","Router","Joi","scheduleService","commonUtil","post","req","res","console","log","body","validateSchedule","error","status","send","details","message","date","replace","startTime","endTime","startTimeDate","endTimeDate","scheduleObject","MOVIE_ID","movieId","SCHED_DATE","SCHED_NO","sequence","PL_START_TIME","CINEMA_NO","cinemaNO","BRCH_ID","branchId","PL_END_TIME","PT_ID","playTypeId","findMovieScheduleBetweenStartEnd","then","row","length","JSON","stringify","insertSchedule","success","catch","get","findAll","data","params","isNaN","findScheduleByDate","err","date1","date2","findMovieScheduleBetween","due","today","Date","fromDateString","toOracleISOTimeString","dueDate","setDate","getDate","Number","setHours","dueDateString","findPublicMovieScheduleBetween","delete","id","deleteScheduleById","put","sid","toPublic","scheduleId","calculateSellRateAndRegister","schedule","scheme","string","min","required","number","validate","module","exports"],"mappings":"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","file":"schedule.js","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst Joi = require('joi');\r\nconst scheduleService = require('./oraclDBService/scheduleService');\r\nconst commonUtil = require('../commonModule/commonUtil');\r\nrouter.post('/', (req,res) => {\r\n    console.log(req.body);\r\n    const {error} = validateSchedule(req.body);\r\n    if(error) {\r\n        res.status(400).send(error.details[0].message);\r\n        return;\r\n    }\r\n    const date = req.body.date.replace(/-/g, '');\r\n    const startTime = req.body.startTime.replace(/:/g, '');\r\n    const endTime = req.body.endTime.replace(/:/g, '');\r\n    const startTimeDate = date+startTime;\r\n    const endTimeDate = date+endTime;\r\n    const scheduleObject =\r\n        {MOVIE_ID: req.body.movieId, SCHED_DATE: date,\r\n        SCHED_NO: req.body.sequence, PL_START_TIME: startTimeDate,\r\n        CINEMA_NO: req.body.cinemaNO, BRCH_ID: req.body.branchId,\r\n        PL_END_TIME: endTimeDate, PT_ID:  req.body.playTypeId};\r\n\r\n    scheduleService.findMovieScheduleBetweenStartEnd(scheduleObject.PL_START_TIME, scheduleObject.PL_END_TIME, scheduleObject.BRCH_ID, scheduleObject.CINEMA_NO)\r\n        .then((row) => {\r\n            console.log(row);\r\n            if(row.length > 0) {\r\n                throw JSON.stringify(row[0]) + 'already Exist';\r\n            } else {\r\n                console.log('whiy here');\r\n                return scheduleService.insertSchedule(scheduleObject);\r\n            }\r\n        }).then((success) => {res.send('success')})\r\n        .catch((error) => res.status(500).send(error));\r\n})\r\n\r\nrouter.get('/', (req,res) => {\r\n    scheduleService.findAll()\r\n        .then((data) => res.send(data))\r\n        .catch((error) => res.status(500).send('nothing'));\r\n})\r\n\r\nrouter.get('/date/:date', (req, res) => {\r\n    const date = req.params.date;\r\n    if(isNaN(date)) {\r\n        res.status(405).send('not support date Type, ex)20120930');\r\n        return false;\r\n    }\r\n    scheduleService.findScheduleByDate(date)\r\n        .then((data) => res.send(data))\r\n        .catch((err) => res.status(500).send(err));\r\n})\r\nrouter.get('/movie/:movieId/date/:date/:date2', (req,res) => {\r\n    const date1 = req.params.date;\r\n    const date2 = req.params.date2;\r\n    const movieId = req.params.movieId;\r\n    if(isNaN(date1) || isNaN(date2) || isNaN(movieId)) {\r\n        res.status(405).send('not support date Type, ex)20120930');\r\n        return false;\r\n    }\r\n    scheduleService.findMovieScheduleBetween(movieId, date1, date2)\r\n        .then((data) => res.send(data))\r\n        .catch((error) => res.status(500).send(error));\r\n})\r\nrouter.get('/movie/:movieId/due/:due', (req, res) => {\r\n    const due = req.params.due;\r\n    const movieId = req.params.movieId;\r\n    if(isNaN(due) || isNaN(movieId)) {\r\n        res.status(405).send('not support date Type, ex)20120930');\r\n        return false;\r\n    }\r\n    const today = new Date();\r\n    const fromDateString = commonUtil.toOracleISOTimeString(today);\r\n    const dueDate = new Date();\r\n    dueDate.setDate(dueDate.getDate() + Number(due));\r\n    dueDate.setHours(0,0,0,0);\r\n    const dueDateString = commonUtil.toOracleISOTimeString(dueDate);\r\n    scheduleService.findPublicMovieScheduleBetween(movieId, fromDateString, dueDateString)\r\n        .then((data) => res.send(data))\r\n        .catch((error) => res.status(500).send(error));\r\n})\r\nrouter.delete('/:id', (req,res) => {\r\n    const id = req.params.id;\r\n    if(!id) {\r\n        res.status(405).send('no id');\r\n    }\r\n    scheduleService.deleteScheduleById(id)\r\n        .then((data) => res.send(data))\r\n        .catch((error) => res.status(500).send(error));\r\n})\r\nrouter.put('/public/:sid', (req, res) => {\r\n    const sid = req.params.sid;\r\n    if(!sid) {\r\n        res.status(405).send('no sid');\r\n    }\r\n    scheduleService.toPublic(sid)\r\n        .then((data) => res.send('success'))\r\n        .catch((error) => res.status(500).send('fail'));\r\n})\r\nrouter.put('/sellRate/:scheduleId', (req, res) => {\r\n    const scheduleId = req.params.scheduleId;\r\n    if(!scheduleId){\r\n        res.status(405).send('no shedule id');\r\n        return false;\r\n    }\r\n    scheduleService.calculateSellRateAndRegister(scheduleId)\r\n        .then((data) => res.send(data))\r\n        .catch((error) => res.status(500).send(error));\r\n})\r\nfunction validateSchedule(schedule) {\r\n    const scheme = {\r\n        date: Joi.string().min(1).required(),\r\n        movieId: Joi.number().min(1).required(),\r\n        startTime: Joi.string().min(1).required(),\r\n        endTime: Joi.string().min(1).required(),\r\n        cinemaNO: Joi.number().required(),\r\n        branchId: Joi.number().required(),\r\n        sequence: Joi.number().required(),\r\n        playTypeId: Joi.number().required()\r\n    }\r\n    //\t\tminAge: Joi.number().required(),\r\n    return Joi.validate(schedule,scheme);\r\n}\r\n\r\nmodule.exports = router;"]}