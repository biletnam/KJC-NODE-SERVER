{"version":3,"sources":["../../../rest_controller/oraclDBService/peopleService.js"],"names":["oracledb","require","dbConfig","oracleDBConfig","commonUtil","findPeopleAPI","Promise","resolve","reject","getConnection","connectConfig","err","connection","console","log","execute","outFormat","OBJECT","error","result","rows","insertPerson","personData","PER_NAME","PER_IMG","ROLE","autoCommit","insertPersonAPI","then","catch","defaultPromiseErrorHandler","module","exports","findPeople"],"mappings":";;AAAA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;AACA,IAAIC,WAAWD,QAAQ,+BAAR,CAAf;AACA,IAAME,iBAAiBF,QAAQ,kCAAR,CAAvB;AACA,IAAMG,aAAaH,QAAQ,+BAAR,CAAnB;AACA,IAAMI,gBAAgB,SAAhBA,aAAgB,GAAM;AACxB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCR,iBAASS,aAAT,CAAuBP,SAASQ,aAAhC,EAA+C,UAACC,GAAD,EAAMC,UAAN,EAAqB;AAChE,gBAAGD,GAAH,EAAQ;AACJE,wBAAQC,GAAR,CAAY,aAAZ;AACA;AACH;AACDF,uBAAWG,OAAX,CAAmB,sBAAnB,EAA0C,EAA1C,EACI,EAAEC,WAAWhB,SAASiB,MAAtB,EADJ,EACmC,UAACC,KAAD,EAAQC,MAAR,EAAmB;AAC9C,oBAAGD,KAAH,EAAU;AACNV,2BAAOU,KAAP;AACA,2BAAO,wBAAP;AACH;AACDL,wBAAQC,GAAR,CAAY,iBAAZ;AACAD,wBAAQC,GAAR,CAAYK,OAAOC,IAAnB;AACAb,wBAAQY,OAAOC,IAAf;AACH,aATL;AAUH,SAfD;AAgBH,KAjBM,CAAP;AAkBH,CAnBD;AAoBA,SAASC,YAAT,CAAsBT,UAAtB,EAAkCU,UAAlC,EAA8Cf,OAA9C,EAAuDC,MAAvD,EAA+D;AAC3DI,eAAWG,OAAX,CAAmB,2EAAnB,EACI,EAACQ,UAAUD,WAAWC,QAAtB,EAAgCC,SAASF,WAAWE,OAApD,EAA6DC,MAAMH,WAAWG,IAA9E,EADJ,EAEI,EAACC,YAAY,IAAb,EAFJ,EAEwB,UAACf,GAAD,EAAKQ,MAAL,EAAgB;AAChC,YAAGR,GAAH,EAAQ;AACJE,oBAAQC,GAAR,CAAYH,GAAZ;AACAH,mBAAO,aAAP;AACH;AACDK,gBAAQC,GAAR,CAAYK,MAAZ;AACAZ,gBAAQY,MAAR;AACH,KATL;AAUH;AACD,IAAMQ,kBAAkB,SAAlBA,eAAkB,CAACL,UAAD,EAAgB;AACpC,WAAO,IAAIhB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCR,iBAASS,aAAT,CAAuBP,SAASQ,aAAhC,EACKkB,IADL,CACU,UAAChB,UAAD,EAAgB;AAClBS,yBAAaT,UAAb,EAAyBU,UAAzB,EAAqCf,OAArC,EAA8CC,MAA9C;AACH,SAHL,EAIKqB,KAJL,CAIWzB,WAAW0B,0BAJtB;AAKH,KANM,CAAP;AAOH,CARD;AASAC,OAAOC,OAAP,GAAiB;AACbC,gBAAY5B,aADC;AAEbgB,kBAAcM;AAFD,CAAjB","file":"peopleService.js","sourcesContent":["var oracledb = require('oracledb');\r\nvar dbConfig = require('../../config/oracle-db-config');\r\nconst oracleDBConfig = require('../oraclDBService/oracleDBConfig');\r\nconst commonUtil = require('../../commonModule/commonUtil');\r\nconst findPeopleAPI = () => {\r\n    return new Promise((resolve, reject) => {\r\n        oracledb.getConnection(dbConfig.connectConfig, (err, connection) => {\r\n            if(err) {\r\n                console.log('hello Error');\r\n                return;\r\n            }\r\n            connection.execute(\"SELECT * from PERSON\",[],\r\n                { outFormat: oracledb.OBJECT },(error, result) => {\r\n                    if(error) {\r\n                        reject(error);\r\n                        return 'error is there fucking';\r\n                    }\r\n                    console.log(\"QUERY RESULTS: \");\r\n                    console.log(result.rows);\r\n                    resolve(result.rows);\r\n                })\r\n        });\r\n    })\r\n}\r\nfunction insertPerson(connection, personData, resolve, reject) {\r\n    connection.execute(\"INSERT INTO PERSON VALUES(PERSON_SEQ.NEXTVAL, :PER_NAME, :PER_IMG, :ROLE)\",\r\n        {PER_NAME: personData.PER_NAME, PER_IMG: personData.PER_IMG, ROLE: personData.ROLE},\r\n        {autoCommit: true}, (err,result) => {\r\n            if(err) {\r\n                console.log(err);\r\n                reject('error occur');\r\n            }\r\n            console.log(result);\r\n            resolve(result);\r\n        })\r\n}\r\nconst insertPersonAPI = (personData) => {\r\n    return new Promise((resolve, reject) => {\r\n        oracledb.getConnection(dbConfig.connectConfig)\r\n            .then((connection) => {\r\n                insertPerson(connection, personData, resolve, reject);\r\n            })\r\n            .catch(commonUtil.defaultPromiseErrorHandler);\r\n    })\r\n}\r\nmodule.exports = {\r\n    findPeople: findPeopleAPI,\r\n    insertPerson: insertPersonAPI\r\n}"]}