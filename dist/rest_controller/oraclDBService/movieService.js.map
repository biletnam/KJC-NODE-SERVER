{"version":3,"sources":["../../../rest_controller/oraclDBService/movieService.js"],"names":["dbConfig","require","oracledb","insertMovieExecute","movieObject","connection","execute","MOVIE_NAME","MOVIE_INTRO","RUNTIME","DIST","MOVIE_IMG","RATE","GENRE","autoCommit","then","result","catch","error","console","log","insertRelatedPerson","resolve","reject","people","PEOPLE","map","p","person","PER_ID","IS_MAIN","CH_NAME","executeMany","err","commit","insertMovieAPI","Promise","getConnection","connectConfig","length","findAllMovie","outFormat","OBJECT","rows","module","exports","insertMovie"],"mappings":"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","file":"movieService.js","sourcesContent":["const dbConfig = require('../../config/oracle-db-config');\r\nconst oracledb = require('oracledb');\r\n\r\nconst insertMovieExecute = (movieObject, connection) => {\r\n    return connection.execute('INSERT INTO MOVIE VALUES(MOVIE_SEQ.NEXTVAL, :MOVIE_NAME, :MOVIE_INTRO, :RUNTIME, :DIST, :MOVIE_IMG, :RATE, :GENRE)',\r\n        {MOVIE_NAME:movieObject.MOVIE_NAME, MOVIE_INTRO: movieObject.MOVIE_INTRO, RUNTIME: movieObject.RUNTIME, DIST: movieObject.DIST, MOVIE_IMG: movieObject.MOVIE_IMG, RATE: movieObject.RATE, GENRE: movieObject.GENRE}\r\n        ,{autoCommit: false})\r\n        .then((result) => connection)\r\n        .catch((error) => console.log(error));\r\n}\r\nconst insertRelatedPerson = (connection, movieObject, resolve, reject) => {\r\n    const people = movieObject.PEOPLE.map((p) => {\r\n        const person = {};\r\n        person.PER_ID = p.PER_ID;\r\n        if(!p.IS_MAIN) {\r\n            person.IS_MAIN = 'N';\r\n        }else {\r\n            person.IS_MAIN = 'Y';\r\n        }\r\n        person.CH_NAME = p.CH_NAME;\r\n        return person;\r\n    })\r\n    return connection.executeMany('INSERT INTO RELATED_PERSON VALUES(:PER_ID, MOVIE_SEQ.CURRVAL, :IS_MAIN, :CH_NAME)',\r\n        people,\r\n        {autoCommit: false}, (err, result) => {\r\n            if(err) {\r\n                console.log(err);\r\n                reject('error');\r\n                return;\r\n            }\r\n            connection.commit((err) => {\r\n                if(err) {\r\n                    console.log(err);\r\n                    reject('error');\r\n                    return;\r\n                }\r\n                resolve('success');\r\n            })\r\n        })\r\n}\r\nconst insertMovieAPI = (movieObject) => {\r\n    return new Promise((resolve, reject) => {\r\n        oracledb.getConnection(dbConfig.connectConfig)\r\n            .then((connection) => {\r\n                return insertMovieExecute(movieObject, connection);\r\n            }).then((connection) => {\r\n            if(movieObject.PEOPLE && movieObject.PEOPLE.length !== 0 ){\r\n                return insertRelatedPerson(connection,movieObject, resolve, reject);\r\n            }else {\r\n                connection.commit((err) => {\r\n                    if(err) {\r\n                        console.log(err);\r\n                        reject('error');\r\n                        return;\r\n                    }\r\n                    resolve('success');\r\n                })\r\n            }\r\n        }).catch((error) => { console.log(error)});\r\n    })\r\n\r\n}\r\nconst findAllMovie = () => {\r\n    return new Promise((resolve, reject) => {\r\n        oracledb.getConnection(dbConfig.connectConfig)\r\n            .then((connection) => {\r\n                return connection.execute('SELECT M.*, RP.PER_NAME, RP.PER_IMG, RP.CH_NAME, RP.IS_MAIN ' +\r\n                    'FROM (SELECT * FROM MOVIE) M LEFT OUTER JOIN ' +\r\n                    '(SELECT P.PER_NAME, P.PER_IMG, P.ROLE, R.CH_NAME, R.MOVIE_ID, R.IS_MAIN FROM PERSON P, RELATED_PERSON R WHERE P.PER_ID = R.PER_ID) RP ' +\r\n                    'ON(M.MOVIE_ID = RP.MOVIE_ID)', [], {outFormat: oracledb.OBJECT}, (err, result) => {\r\n                    if(err){\r\n                        console.log(err);\r\n                        reject('error');\r\n                        return;\r\n                    }\r\n                    resolve(result.rows);\r\n                })\r\n            }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n    })\r\n}\r\n\r\nmodule.exports = {\r\n    insertMovie: insertMovieAPI,\r\n    findAllMovie\r\n}"]}