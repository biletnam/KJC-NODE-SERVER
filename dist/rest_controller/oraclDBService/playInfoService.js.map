{"version":3,"sources":["../../../rest_controller/oraclDBService/playInfoService.js"],"names":["dbConfig","require","oracledb","commonUtil","movieService","cinemaService","branchService","playTypeService","findBranchAndCinema","CINEMA_NO","BRCH_ID","Promise","resolve","reject","getConnection","connectConfig","then","connection","execute","outFormat","OBJECT","err","result","console","log","doRelease","rows","catch","error","insertPlayInfoExecute","scheduleObject","movieP","findMovieById","MOVIE_ID","cinemaBranchP","playTypeP","findPlayTypeById","PT_ID","all","values","movies","cinemaBranches","playTypes","movie","cinemaBranch","playType","FLOOR","BRCH_NAME","PL_START_TIME","PL_END_TIME","MOVIE_NAME","PT_NAME","autoCommit","deletePlayInfoBySchedIdExecute","schedId","SCHED_ID","close","module","exports"],"mappings":"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","file":"playInfoService.js","sourcesContent":["const dbConfig = require('../../config/oracle-db-config');\r\nconst oracledb = require('oracledb');\r\nconst commonUtil = require('../../commonModule/commonUtil');\r\nconst movieService = require('./movieService');\r\nconst cinemaService = require('./cinemaService');\r\nconst branchService = require('./branchService');\r\nconst playTypeService = require('./price/playTypeService');\r\n\r\nfunction findBranchAndCinema(CINEMA_NO, BRCH_ID) {\r\n    return new Promise((resolve, reject) => {\r\n        oracledb.getConnection(dbConfig.connectConfig)\r\n            .then((connection) => {\r\n                connection.execute('SELECT * FROM CINEMA C JOIN BRANCH B ON(C.BRCH_ID = B.BRCH_ID) WHERE C.CINEMA_NO = :CINEMA_NO AND C.BRCH_ID = :BRCH_ID',\r\n                {CINEMA_NO: CINEMA_NO, BRCH_ID: BRCH_ID},\r\n                    {outFormat: oracledb.OBJECT}, (err, result) => {\r\n                        if(err) {\r\n                            console.log(err);\r\n                            doRelease(connection);\r\n                            reject('error');\r\n                            return;\r\n                        }\r\n                        doRelease(connection);\r\n                        resolve(result.rows);\r\n                    });\r\n            }).catch((error) => {console.log(error)});\r\n    })\r\n\r\n}\r\nfunction insertPlayInfoExecute(connection,scheduleObject) {\r\n    const movieP = movieService.findMovieById(scheduleObject.MOVIE_ID);\r\n    const cinemaBranchP = findBranchAndCinema(scheduleObject.CINEMA_NO, scheduleObject.BRCH_ID);\r\n    const playTypeP = playTypeService.findPlayTypeById(scheduleObject.PT_ID);\r\n    return Promise.all([movieP, cinemaBranchP, playTypeP]).then(function(values){\r\n        const movies = values[0];\r\n        const cinemaBranches = values[1];\r\n        const playTypes = values[2];\r\n        const movie = movies[0];\r\n        const cinemaBranch = cinemaBranches[0];\r\n        const playType = playTypes[0];\r\n        return connection.execute(`INSERT INTO PLAY_INFO VALUES(:FLOOR, :BRCH_NAME, TO_DATE(:PL_START_TIME, 'YYYYMMDDHH24MI'), TO_DATE(:PL_END_TIME, 'YYYYMMDDHH24MI'), :CINEMA_NO, :MOVIE_NAME, SCHEDULE_SEQ.CURRVAL, :PT_NAME)`,\r\n            {FLOOR: cinemaBranch.FLOOR, BRCH_NAME: cinemaBranch.BRCH_NAME,\r\n                PL_START_TIME: scheduleObject.PL_START_TIME,\r\n                PL_END_TIME: scheduleObject.PL_END_TIME,\r\n                CINEMA_NO: scheduleObject.CINEMA_NO,\r\n                MOVIE_NAME: movie.MOVIE_NAME,\r\n                PT_NAME: playType.PT_NAME}, {autoCommit: false})\r\n            .then((result) => connection)\r\n    })\r\n}\r\nfunction deletePlayInfoBySchedIdExecute(connection, schedId) {\r\n    return connection.execute('DELETE FROM PLAY_INFO WHERE SCHED_ID = :SCHED_ID',{SCHED_ID: schedId}, {autoCommit: false})\r\n        .then((result) => connection);\r\n}\r\nfunction doRelease(connection) {\r\n    return connection.close((err) => {\r\n        if(err) {\r\n            console.log(err);\r\n        }\r\n    })\r\n}\r\n\r\nmodule.exports = {\r\n    insertPlayInfoExecute,\r\n    deletePlayInfoBySchedIdExecute\r\n}"]}