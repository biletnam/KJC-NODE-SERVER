{"version":3,"sources":["../../../rest_controller/oraclDBService/seatService.js"],"names":["dbConfig","require","oracledb","commonUtil","firstBatchInsert","ROWS","connection","executeMany","autoCommit","findSeatsByCinemaNoAndBranchID","CINEMA_NO","BRCH_ID","Promise","resolve","reject","console","log","getConnection","connectConfig","then","execute","outFormat","OBJECT","err","result","doRelease","rows","catch","defaultPromiseErrorHandler","findSeatsByCNOAndBIDWithSeatType","updateSeatsSeatType","seatTypeUpdateObject","commit","close","module","exports"],"mappings":";;AAAA,IAAMA,WAAWC,QAAQ,+BAAR,CAAjB;AACA,IAAMC,WAAWD,QAAQ,UAAR,CAAjB;AACA,IAAME,aAAaF,QAAQ,+BAAR,CAAnB;;AAEA,SAASG,gBAAT,CAA0BC,IAA1B,EAAgCC,UAAhC,EAA4C;AACxC,WAAOA,WAAWC,WAAX,CAAuB,0EAAvB,EACHF,IADG,EACG,EAACG,YAAY,KAAb,EADH,CAAP;AAEH;;AAED,SAASC,8BAAT,CAAwCC,SAAxC,EAAmDC,OAAnD,EAA4D;AACxD,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,gBAAQC,GAAR,CAAYN,SAAZ,EAAuBC,OAAvB;AACAT,iBAASe,aAAT,CAAuBjB,SAASkB,aAAhC,EACKC,IADL,CACU,UAACb,UAAD,EAAgB;AACnB,mBAAOA,WAAWc,OAAX,CAAmB,wEAAnB,EACF,EAACV,WAAWA,SAAZ,EAAuBC,SAASA,OAAhC,EADE,EACwC,EAACU,WAAWnB,SAASoB,MAArB,EADxC,EACsE,UAACC,GAAD,EAAMC,MAAN,EAAiB;AACrF,oBAAGD,GAAH,EAAQ;AACJR,4BAAQC,GAAR,CAAY,OAAZ;AACAS,8BAAUnB,UAAV;AACAQ,2BAAO,OAAP;AACA;AACH;AACDW,0BAAUnB,UAAV;AACAO,wBAAQW,OAAOE,IAAf;AACH,aAVC,CAAP;AAWF,SAbL,EAaOC,KAbP,CAaaxB,WAAWyB,0BAbxB;AAcH,KAhBM,CAAP;AAiBH;;AAED,SAASC,gCAAT,CAA0CnB,SAA1C,EAAqDC,OAArD,EAA8D;AAC1D,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,gBAAQC,GAAR,CAAYN,SAAZ,EAAuBC,OAAvB;AACAT,iBAASe,aAAT,CAAuBjB,SAASkB,aAAhC,EACKC,IADL,CACU,UAACb,UAAD,EAAgB;AAClB,mBAAOA,WAAWc,OAAX,CAAmB,iIAAnB,EACH,EAACV,WAAWA,SAAZ,EAAuBC,SAASA,OAAhC,EADG,EACuC,EAACU,WAAWnB,SAASoB,MAArB,EADvC,EACqE,UAACC,GAAD,EAAMC,MAAN,EAAiB;AACrF,oBAAGD,GAAH,EAAQ;AACJE,8BAAUnB,UAAV;AACAS,4BAAQC,GAAR,CAAY,OAAZ;AACAF,2BAAO,OAAP;AACA;AACH;AACDW,0BAAUnB,UAAV;AACAO,wBAAQW,OAAOE,IAAf;AACH,aAVE,CAAP;AAWH,SAbL,EAaOC,KAbP,CAaaxB,WAAWyB,0BAbxB;AAcH,KAhBM,CAAP;AAiBH;;AAED,SAASE,mBAAT,CAA6BC,oBAA7B,EAAmD;AAC/C,WAAO,IAAInB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCZ,iBAASe,aAAT,CAAuBjB,SAASkB,aAAhC,EACKC,IADL,CACU,UAACb,UAAD,EAAgB;AAClB,mBAAOA,WAAWC,WAAX,4HACHwB,oBADG,EAEH,EAACvB,YAAY,KAAb,EAFG,EAEkB,UAACe,GAAD,EAAMC,MAAN,EAAiB;AAClC,oBAAGD,GAAH,EAAQ;AACJR,4BAAQC,GAAR,CAAY,mBAAZ,EAAiCO,GAAjC;AACAE,8BAAUnB,UAAV;AACAQ,2BAAOS,GAAP;AACA;AACH;AACDjB,2BAAW0B,MAAX,CAAkB,UAACT,GAAD,EAAS;AACvB,wBAAGA,GAAH,EAAQ;AACJR,gCAAQC,GAAR,CAAY,0BAAZ,EAAwCO,GAAxC;AACAE,kCAAUnB,UAAV;AACAQ,+BAAOS,GAAP;AACA;AACH;AACDE,8BAAUnB,UAAV;AACAO,4BAAQ,SAAR;AACH,iBATD;AAUH,aAnBE,CAAP;AAoBH,SAtBL;AAuBH,KAxBM,CAAP;AAyBH;AACD,SAASY,SAAT,CAAmBnB,UAAnB,EAA+B;AAC3B,WAAOA,WAAW2B,KAAX,CAAiB,UAACV,GAAD,EAAS;AAC7B,YAAGA,GAAH,EAAQ;AACJR,oBAAQC,GAAR,CAAYO,GAAZ;AACH;AACJ,KAJM,CAAP;AAKH;AACDW,OAAOC,OAAP,GAAiB;AACb/B,sBAAkBA,gBADL;AAEbK,kEAFa;AAGboB,sEAHa;AAIbC;AAJa,CAAjB","file":"seatService.js","sourcesContent":["const dbConfig = require('../../config/oracle-db-config');\r\nconst oracledb = require('oracledb');\r\nconst commonUtil = require('../../commonModule/commonUtil');\r\n\r\nfunction firstBatchInsert(ROWS, connection) {\r\n    return connection.executeMany('INSERT INTO SEAT VALUES(:SEAT_NAME, :CINEMA_NO, :BRCH_ID, :SEAT_TYPE_ID)',\r\n        ROWS, {autoCommit: false});\r\n}\r\n\r\nfunction findSeatsByCinemaNoAndBranchID(CINEMA_NO, BRCH_ID) {\r\n    return new Promise((resolve, reject) => {\r\n        console.log(CINEMA_NO, BRCH_ID);\r\n        oracledb.getConnection(dbConfig.connectConfig)\r\n            .then((connection) => {\r\n               return connection.execute('SELECT * FROM SEAT WHERE CINEMA_NO = :CINEMA_NO AND BRCH_ID = :BRCH_ID',\r\n                    {CINEMA_NO: CINEMA_NO, BRCH_ID: BRCH_ID}, {outFormat: oracledb.OBJECT}, (err, result) => {\r\n                        if(err) {\r\n                            console.log('error');\r\n                            doRelease(connection);\r\n                            reject('error');\r\n                            return;\r\n                        }\r\n                        doRelease(connection);\r\n                        resolve(result.rows);\r\n                    })\r\n            }).catch(commonUtil.defaultPromiseErrorHandler);\r\n    })\r\n}\r\n\r\nfunction findSeatsByCNOAndBIDWithSeatType(CINEMA_NO, BRCH_ID) {\r\n    return new Promise((resolve, reject) => {\r\n        console.log(CINEMA_NO, BRCH_ID);\r\n        oracledb.getConnection(dbConfig.connectConfig)\r\n            .then((connection) => {\r\n                return connection.execute('SELECT * FROM SEAT S JOIN SEAT_TYPE ST ON(S.SEAT_TYPE_ID = ST.SEAT_TYPE_ID) WHERE CINEMA_NO = :CINEMA_NO AND BRCH_ID = :BRCH_ID',\r\n                    {CINEMA_NO: CINEMA_NO, BRCH_ID: BRCH_ID}, {outFormat: oracledb.OBJECT}, (err, result) => {\r\n                        if(err) {\r\n                            doRelease(connection);\r\n                            console.log('error');\r\n                            reject('error');\r\n                            return;\r\n                        }\r\n                        doRelease(connection);\r\n                        resolve(result.rows);\r\n                    })\r\n            }).catch(commonUtil.defaultPromiseErrorHandler);\r\n    })\r\n}\r\n\r\nfunction updateSeatsSeatType(seatTypeUpdateObject) {\r\n    return new Promise((resolve, reject) => {\r\n        oracledb.getConnection(dbConfig.connectConfig)\r\n            .then((connection) => {\r\n                return connection.executeMany(`UPDATE SEAT SET SEAT_TYPE_ID=:SEAT_TYPE_ID WHERE BRCH_ID=:BRCH_ID AND CINEMA_NO = :CINEMA_NO AND SEAT_NAME = :SEAT_NAME`,\r\n                    seatTypeUpdateObject,\r\n                    {autoCommit: false}, (err, result) => {\r\n                        if(err) {\r\n                            console.log('error in seatType', err);\r\n                            doRelease(connection);\r\n                            reject(err);\r\n                            return;\r\n                        }\r\n                        connection.commit((err) => {\r\n                            if(err) {\r\n                                console.log('error in seatType commit', err);\r\n                                doRelease(connection);\r\n                                reject(err);\r\n                                return;\r\n                            }\r\n                            doRelease(connection);\r\n                            resolve('success');\r\n                        })\r\n                    })\r\n            })\r\n    })\r\n}\r\nfunction doRelease(connection) {\r\n    return connection.close((err) => {\r\n        if(err) {\r\n            console.log(err);\r\n        }\r\n    })\r\n}\r\nmodule.exports = {\r\n    firstBatchInsert: firstBatchInsert,\r\n    findSeatsByCinemaNoAndBranchID,\r\n    findSeatsByCNOAndBIDWithSeatType,\r\n    updateSeatsSeatType\r\n}"]}