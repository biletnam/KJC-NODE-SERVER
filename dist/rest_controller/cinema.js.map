{"version":3,"sources":["../../rest_controller/cinema.js"],"names":["express","require","router","Router","Joi","cinemaService","commonUtil","get","req","res","findAll","then","data","send","catch","error","console","log","status","post","validateCinema","body","details","message","cinemaObject","CINEMA_NO","cinemaNumber","BRCH_ID","branch","SEAT_TYPE_ID","seatType","FLOOR","floor","rows","insertCinema","r","cinema","scheme","number","min","required","array","validate","module","exports"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,SAASF,QAAQG,MAAR,EAAf;AACA,IAAMC,MAAMH,QAAQ,KAAR,CAAZ;AACA,IAAMI,gBAAgBJ,QAAQ,gCAAR,CAAtB;AACA,IAAMK,aAAaL,QAAQ,4BAAR,CAAnB;;AAEAC,OAAOK,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAKC,GAAL,EAAa;AACzBJ,kBAAcK,OAAd,GACKC,IADL,CACU,UAACC,IAAD,EAAU;AACZH,YAAII,IAAJ,CAASD,IAAT;AACH,KAHL,EAIKE,KAJL,CAIW,UAACC,KAAD,EAAW;AAACC,gBAAQC,GAAR,CAAYF,KAAZ,EAAoBN,IAAIS,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB,WAArB;AAAmC,KAJ9E;AAKH,CAND;AAOAX,OAAOiB,IAAP,CAAY,GAAZ,EAAiB,UAACX,GAAD,EAAKC,GAAL,EAAa;AAAA,0BACVW,eAAeZ,IAAIa,IAAnB,CADU;AAAA,QACnBN,KADmB,mBACnBA,KADmB;;AAE1B,QAAGA,KAAH,EAAU;AACNN,YAAIS,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqBE,MAAMO,OAAN,CAAc,CAAd,EAAiBC,OAAtC;AACA;AACH;AACD,QAAMC,eAAe;AACjBC,mBAAWjB,IAAIa,IAAJ,CAASK,YADH;AAEjBC,iBAASnB,IAAIa,IAAJ,CAASO,MAFD;AAGjBC,sBAAcrB,IAAIa,IAAJ,CAASS,QAHN;AAIjBC,eAAOvB,IAAIa,IAAJ,CAASW,KAJC;AAKjBC,cAAMzB,IAAIa,IAAJ,CAASY;AALE,KAArB;AAOA5B,kBAAc6B,YAAd,CAA2BV,YAA3B,EACKb,IADL,CACU,UAACwB,CAAD;AAAA,eAAO1B,IAAII,IAAJ,CAAS,SAAT,CAAP;AAAA,KADV,EAEKC,KAFL,CAEW,UAACC,KAAD;AAAA,eAAWC,QAAQC,GAAR,CAAY,OAAZ,CAAX;AAAA,KAFX;AAGH,CAhBD;;AAkBA,SAASG,cAAT,CAAwBgB,MAAxB,EAAgC;AAC5B,QAAMC,SAAS;AACXX,sBAActB,IAAIkC,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,QAApB,EADH;AAEXP,cAAM7B,IAAIqC,KAAJ,EAFK;AAGXb,gBAAQxB,IAAIkC,MAAJ,GAAaE,QAAb,EAHG;AAIXR,eAAO5B,IAAIkC,MAAJ,GAAaE,QAAb,EAJI;AAKXV,kBAAU1B,IAAIkC,MAAJ,GAAaE,QAAb;AAEd;AAPe,KAAf,CAQA,OAAOpC,IAAIsC,QAAJ,CAAaN,MAAb,EAAoBC,MAApB,CAAP;AACH;;AAEDM,OAAOC,OAAP,GAAiB1C,MAAjB","file":"cinema.js","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst Joi = require('joi');\r\nconst cinemaService = require('./oraclDBService/cinemaService');\r\nconst commonUtil = require('../commonModule/commonUtil');\r\n\r\nrouter.get('/', (req,res) => {\r\n    cinemaService.findAll()\r\n        .then((data) => {\r\n            res.send(data);\r\n        })\r\n        .catch((error) => {console.log(error); res.status(404).send('not found');});\r\n})\r\nrouter.post('/', (req,res) => {\r\n    const {error} = validateCinema(req.body);\r\n    if(error) {\r\n        res.status(400).send(error.details[0].message);\r\n        return;\r\n    }\r\n    const cinemaObject = {\r\n        CINEMA_NO: req.body.cinemaNumber,\r\n        BRCH_ID: req.body.branch,\r\n        SEAT_TYPE_ID: req.body.seatType,\r\n        FLOOR: req.body.floor,\r\n        rows: req.body.rows\r\n    }\r\n    cinemaService.insertCinema(cinemaObject)\r\n        .then((r) => res.send('success'))\r\n        .catch((error) => console.log('error'));\r\n});\r\n\r\nfunction validateCinema(cinema) {\r\n    const scheme = {\r\n        cinemaNumber: Joi.number().min(0).required(),\r\n        rows: Joi.array(),\r\n        branch: Joi.number().required(),\r\n        floor: Joi.number().required(),\r\n        seatType: Joi.number().required()\r\n    }\r\n    //\t\tminAge: Joi.number().required(),\r\n    return Joi.validate(cinema,scheme);\r\n}\r\n\r\nmodule.exports = router;"]}