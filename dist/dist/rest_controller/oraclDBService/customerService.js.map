{"version":3,"sources":["../../../rest_controller/oraclDBService/customerService.js"],"names":["oracledb","require","dbConfig","commonUtil","registerUser","userDataObject","Promise","resolve","reject","conn","undefined","findCustomerByNameAndPhone","USER_NAME","PHONE","then","data","length","getConnection","connectConfig","connection","execute","IS_USER","outFormat","OBJECT","autoCommit","result","USER_ID","ZIP_CODE","ADDR","ADDR_DET","EMAIL","BIRTH","PASSWORD","SALT","error","commit","err","console","log","close","catch","registerNonUser","nonUserDataObject","findCustomerAPI","rows","userIdCheck","id","findUserById","findUserByCustomerId","cid","CUST_ID","name","phone","module","exports","findCustomers"],"mappings":"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","file":"customerService.js","sourcesContent":["'use strict';\n\nvar oracledb = require('oracledb');\nvar dbConfig = require('../../config/oracle-db-config');\nvar commonUtil = require('../../commonModule/commonUtil');\nvar registerUser = function registerUser(userDataObject) {\n    return new Promise(function (resolve, reject) {\n        var conn = void 0;\n        undefined.findCustomerByNameAndPhone(userDataObject.USER_NAME, userDataObject.PHONE).then(function (data) {\n            if (data.length === 0) {\n                oracledb.getConnection(dbConfig.connectConfig).then(function (connection) {\n                    return connection.execute(\"INSERT INTO CUSTOMER VALUES(CUSTOMER_SEQ.NEXTVAL, :IS_USER, :PHONE, :USER_NAME)\", { IS_USER: 'Y', PHONE: userDataObject.PHONE, USER_NAME: userDataObject.USER_NAME }, { outFormat: oracledb.OBJECT, autoCommit: false });\n                }).then(function (result) {\n                    return connection;\n                }).then(function (connection) {\n                    conn = connection;\n                    return connection.execute(\"INSERT INTO USERS (USER_ID, ZIP_CODE, ADDR, ADDR_DET, EMAIL, BIRTH, CUST_ID, PASSWORD, SALT) \" + \"VALUES(:USER_ID, :ZIP_CODE, :ADDR, :ADDR_DET, :EMAIL, :BIRTH, CUSTOMER_SEQ.CURRVAL , :PASSWORD, :SALT)\", { USER_ID: userDataObject.USER_ID, ZIP_CODE: userDataObject.ZIP_CODE, ADDR: userDataObject.ADDR, ADDR_DET: userDataObject.ADDR_DET,\n                        EMAIL: userDataObject.EMAIL, BIRTH: userDataObject.BIRTH, PASSWORD: userDataObject.PASSWORD, SALT: userDataObject.SALT }, { outFormat: oracledb.OBJECT, autoCommit: false }, function (error, result) {\n                        if (error) {\n                            reject(error);\n                            return 'error is there';\n                        }\n                        connection.commit(function (err) {\n                            if (err) {\n                                console.log(err);\n                                reject('error while commit', err);\n                                return;\n                            }\n                            resolve('success');\n                        });\n                    });\n                }).then(function () {\n                    if (conn) {\n                        return conn.close();\n                    }\n                }).catch(function (error) {\n                    console.log('connectionError', error);\n                });\n            }\n        }).catch(function (error) {\n            console.log('find customer Error');\n        });\n    }).catch(function (error) {\n        console.log('error');\n    });\n};\nvar registerNonUser = function registerNonUser(nonUserDataObject) {\n    return new Promise(function (resolve, reject) {\n        var conn = void 0;\n        oracledb.getConnection(dbConfig.connectConfig).then(function (connection) {\n            return connection.execute(\"INSERT INTO CUSTOMER VALUES(CUSTOMER_SEQ.NEXTVAL, :IS_USER, :PHONE, :USER_NAME)\", { IS_USER: 'N', PHONE: nonUserDataObject.PHONE, USER_NAME: nonUserDataObject.USER_NAME }, { outFormat: oracledb.OBJECT, autoCommit: true });\n        }).then(function (result) {\n            resolve(nonUserDataObject);\n        }).catch(function (error) {\n            reject(error);\n        });\n    });\n};\nvar findCustomerAPI = function findCustomerAPI() {\n    return new Promise(function (resolve, reject) {\n        oracledb.getConnection(dbConfig.connectConfig, function (err, connection) {\n            if (err) {\n                console.log('hello Error');\n                return;\n            }\n            connection.execute(\"SELECT * FROM CUSTOMER\", [], { outFormat: oracledb.OBJECT }, function (error, result) {\n                resolve(result.rows);\n                if (error) {\n                    reject(error);\n                    return 'error is there fucking';\n                }\n            });\n        });\n    });\n};\nvar userIdCheck = function userIdCheck(id) {\n    return new Promise(function (resolve, reject) {\n        oracledb.getConnection(dbConfig.connectConfig).then(function (connection) {\n            connection.execute('SELECT 1 FROM USERS WHERE USER_ID = :USER_ID', { USER_ID: id }, { outFormat: oracledb.OBJECT }).then(function (result) {\n                resolve(result.rows);\n            }).catch(function (error) {\n                console.log('has error while select', error);\n                reject('error');\n            });\n        }).catch(function (error) {\n            console.log('error while Connection', error);\n        });\n    });\n};\nvar findUserById = function findUserById(id) {\n    var conn = void 0;\n    return new Promise(function (resolve, reject) {\n        oracledb.getConnection(dbConfig.connectConfig).then(function (connection) {\n            conn = connection;\n            return connection.execute('SELECT * FROM USERS U NATURAL JOIN CUSTOMER C WHERE U.USER_ID = :USER_ID', { USER_ID: id }, { outFormat: oracledb.OBJECT }).then(function (result) {\n                return resolve(result.rows);\n            }).catch(function (error) {\n                console.log('error while findUser', error);\n                reject('error');\n            });\n        }).then(function () {\n            if (conn) {\n                conn.close();\n            }\n        }).catch(function (error) {\n            console.log('inner promise error', error);\n        });\n    }).catch(function (error) {\n        console.log('error of outer Promise', error);\n    });\n};\nvar findUserByCustomerId = function findUserByCustomerId(cid) {\n    var conn = void 0;\n    return new Promise(function (resolve, reject) {\n        oracledb.getConnection(dbConfig.connectConfig).then(function (connection) {\n            conn = connection;\n            return connection.execute('SELECT * FROM USERS U JOIN CUSTOMER C ON(U.CUST_ID = C.CUST_ID) WHERE C.CUST_ID = :CUST_ID', { CUST_ID: cid }, { outFormat: oracledb.OBJECT }).then(function (result) {\n                return resolve(result.rows);\n            }).catch(function (error) {\n                console.log('error while findUser', error);\n                reject('error');\n            });\n        }).then(function () {\n            if (conn) {\n                conn.close();\n            }\n        }).catch(function (error) {\n            console.log('inner promise error', error);\n        });\n    });\n};\nvar findCustomerByNameAndPhone = function findCustomerByNameAndPhone(name, phone) {\n    var conn = void 0;\n    return new Promise(function (resolve, reject) {\n        oracledb.getConnection(dbConfig.connectConfig).then(function (connection) {\n            conn = connection;\n            return connection.execute('SELECT * FROM CUSTOMER WHERE USER_NAME = :USER_NAME AND PHONE = :PHONE', { USER_NAME: name, PHONE: phone }, { outFormat: oracledb.OBJECT }).then(function (result) {\n                return resolve(result.rows);\n            }).catch(function (error) {\n                console.log('error while findCustomer', error);\n                reject('error');\n            });\n        }).then(function () {\n            if (conn) {\n                conn.close();\n            }\n        }).catch(function (error) {\n            console.log('inner promise error', error);\n        });\n    });\n};\nmodule.exports = {\n    registerUser: registerUser,\n    findCustomers: findCustomerAPI,\n    userIdCheck: userIdCheck,\n    findUserById: findUserById,\n    findCustomerByNameAndPhone: findCustomerByNameAndPhone,\n    registerNonUser: registerNonUser,\n    findUserByCustomerId: findUserByCustomerId\n};\n//# sourceMappingURL=customerService.js.map"]}